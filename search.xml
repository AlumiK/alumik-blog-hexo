<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Batch Script – Loop</title>
    <url>/posts/32/</url>
    <content><![CDATA[<p><code>for /l</code> is your friend:</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> /l %x <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="number">100</span>) <span class="keyword">do</span> <span class="built_in">echo</span> %x</span><br></pre></td></tr></table></figure>
<p>Starts at 1, steps by one, and finishes at 100.</p>
<p>Use two <code>%</code>s if it&#39;s in a batch file:</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> /l <span class="variable">%%x</span> <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="number">100</span>) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%x</span></span><br></pre></td></tr></table></figure>
<p>If you have multiple commands for each iteration of the loop, do this:</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> /l %x <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="number">100</span>) <span class="keyword">do</span> (</span><br><span class="line">   <span class="built_in">echo</span> %x</span><br><span class="line">   <span class="built_in">copy</span> %x.txt z:\whatever\etc</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>or in a batch file:</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> /l <span class="variable">%%x</span> <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="number">100</span>) <span class="keyword">do</span> (</span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">%%x</span></span><br><span class="line">   <span class="built_in">copy</span> <span class="variable">%%x</span>.txt z:\whatever\etc</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>Key:</p>
<ul>
<li><code>/l</code> denotes that the <code>for</code> command will operate in a numerical fashion, rather than operating on a set of files.</li>
<li><code>%x</code> is the loops variable.</li>
<li>(starting value, increment of value, end condition[inclusive])</li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>批处理文件</tag>
      </tags>
  </entry>
  <entry>
    <title>Batch Script – Variables</title>
    <url>/posts/33/</url>
    <content><![CDATA[<p>There are two types of variables in batch files. One is for parameters which can be passed when the batch file is called and the other is done via the set command.</p>
<span id="more"></span>
<h2 id="Command-Line-Arguments"><a href="#Command-Line-Arguments" class="headerlink" title="Command Line Arguments"></a>Command Line Arguments</h2><p>Batch scripts support the concept of command line arguments wherein arguments can be passed to the batch file when invoked. The arguments can be called from the batch files through the variables <code>%1</code>, <code>%2</code>, <code>%3</code>, and so on.</p>
<p>The following example shows a batch file which accepts 3 command line arguments and <code>echo</code>s them to the command line screen.</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> %<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">2</span></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>If the above batch script is stored in a file called <em>test.bat</em> and we were to run the batch as</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Test.bat 1 2 3</span><br></pre></td></tr></table></figure>
<p>The above command produces the following output.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
<p>If we were to run the batch as</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Example 1 2 3 4</span><br></pre></td></tr></table></figure>
<p>The output would still remain the same as above. However, the fourth parameter would be ignored.</p>
<h2 id="Set-Command"><a href="#Set-Command" class="headerlink" title="Set Command"></a>Set Command</h2><p>The other way in which variables can be initialized is via the <code>set</code> command. Following is the syntax of the set command.</p>
<h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> /A variable-name=value</span><br></pre></td></tr></table></figure>
<p>where,</p>
<ul>
<li><code>variable-name</code> is the name of the variable you want to set.</li>
<li><code>value</code> is the value which needs to be set against the variable.</li>
<li><code>/A</code> – This switch is used if the value needs to be numeric in nature.</li>
</ul>
<p>The following example shows a simple way the set command can be used.</p>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> message=Hello World</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%message%</span></span><br></pre></td></tr></table></figure>
<ul>
<li>In the above code snippet, a variable called message is defined and set with the value of &quot;Hello World&quot;.</li>
<li>To display the value of the variable, note that the variable needs to be enclosed in the <code>%</code> sign.</li>
</ul>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>The above command produces the following output.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hello World</span><br></pre></td></tr></table></figure>
<h2 id="Working-with-Numeric-Values"><a href="#Working-with-Numeric-Values" class="headerlink" title="Working with Numeric Values"></a>Working with Numeric Values</h2><p>In batch script, it is also possible to define a variable to hold a numeric value. This can be done by using the <code>/A</code> switch.</p>
<p>The following code shows a simple way in which numeric values can be set with the <code>/A</code> switch.</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">SET</span> /A a = <span class="number">5</span></span><br><span class="line"><span class="built_in">SET</span> /A b = <span class="number">10</span></span><br><span class="line"><span class="built_in">SET</span> /A c = <span class="variable">%a%</span> + <span class="variable">%b%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%c%</span></span><br></pre></td></tr></table></figure>
<ul>
<li>We are first setting the value of 2 variables, <code>a</code> and <code>b</code> to <code>5</code> and <code>10</code> respectively.</li>
<li>We are adding those values and storing in the variable <code>c</code>.</li>
<li>Finally, we are displaying the value of the variable <code>c</code>.</li>
</ul>
<p>The output of the above program would be <code>15</code>.</p>
<p>All of the arithmetic operators work in batch files. The following example shows arithmetic operators can be used in batch files.</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">SET</span> /A a = <span class="number">5</span></span><br><span class="line"><span class="built_in">SET</span> /A b = <span class="number">10</span></span><br><span class="line"><span class="built_in">SET</span> /A c = <span class="variable">%a%</span> + <span class="variable">%b%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%c%</span></span><br><span class="line"><span class="built_in">SET</span> /A c = <span class="variable">%a%</span> - <span class="variable">%b%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%c%</span></span><br><span class="line"><span class="built_in">SET</span> /A c = <span class="variable">%b%</span> / <span class="variable">%a%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%c%</span></span><br><span class="line"><span class="built_in">SET</span> /A c = <span class="variable">%b%</span> * <span class="variable">%a%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%c%</span></span><br></pre></td></tr></table></figure>
<p>The above command produces the following output.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">15</span><br><span class="line">-5</span><br><span class="line">2</span><br><span class="line">50</span><br></pre></td></tr></table></figure>
<h2 id="Local-vs-Global-Variables"><a href="#Local-vs-Global-Variables" class="headerlink" title="Local vs Global Variables"></a>Local vs Global Variables</h2><p>In any programming language, there is an option to mark variables as having some sort of scope, i.e. the section of code on which they can be accessed. Normally, variable having a global scope can be accessed anywhere from a program whereas local scoped variables have a defined boundary in which they can be accessed.</p>
<p>DOS scripting also has a definition for locally and globally scoped variables. By default, variables are global to your entire command prompt session. Call the <code>SETLOCAL</code> command to make variables local to the scope of your script. After calling <code>SETLOCAL</code>, any variable assignments revert upon calling <code>ENDLOCAL</code>, calling <code>EXIT</code>, or when execution reaches the end of file (EOF) in your script. The following example shows the difference when local and global variables are set in the script.</p>
<h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h3><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> globalvar = <span class="number">5</span></span><br><span class="line"><span class="built_in">SETLOCAL</span></span><br><span class="line"><span class="built_in">set</span> var = <span class="number">13145</span></span><br><span class="line"><span class="built_in">set</span> /A var = <span class="variable">%var%</span> + <span class="number">5</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%globalvar%</span></span><br><span class="line"><span class="built_in">ENDLOCAL</span></span><br></pre></td></tr></table></figure>
<p>Few key things to note about the above program.</p>
<ul>
<li>The <code>globalvar</code> is defined with a global scope and is available throughout the entire script.</li>
<li>The <code>var</code> variable is defined in a local scope because it is enclosed between a <code>SETLOCAL</code> and <code>ENDLOCAL</code> block. Hence, this variable will be destroyed as soon the <code>ENDLOCAL</code> statement is executed.</li>
</ul>
<h3 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h3><p>The above command produces the following output.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">13150</span><br><span class="line">5</span><br></pre></td></tr></table></figure>
<p>You will notice that the command <code>echo %var%</code> will not yield anything because after the <code>ENDLOCAL</code> statement, the <code>var</code> variable will no longer exist.</p>
<h2 id="Working-with-Environment-Variables"><a href="#Working-with-Environment-Variables" class="headerlink" title="Working with Environment Variables"></a>Working with Environment Variables</h2><p>If you have variables that would be used across batch files, then it is always preferable to use environment variables. Once the environment variable is defined, it can be accessed via the <code>%</code> sign. The following example shows how to see the <code>JAVA_HOME</code> defined on a system. The <code>JAVA_HOME</code> variable is a key component that is normally used by a wide variety of applications.</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%JAVA_HOME%</span></span><br></pre></td></tr></table></figure>
<p>The output would show the <code>JAVA_HOME</code> directory which would depend from system to system. Following is an example of an output.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Atlassian\Bitbucket\4.0.1\jre</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>批处理文件</tag>
      </tags>
  </entry>
  <entry>
    <title>Enable Skia Rendering for Android UI in Android Emulator</title>
    <url>/posts/36/</url>
    <content><![CDATA[<p>When using images for API 27 or later, the emulator can render the Android UI with <a href="https://skia.org/">Skia</a>, which can render more smoothly and efficiently.</p>
<p>To enable Skia rendering, use the following commands in adb shell:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su</span><br><span class="line">setprop debug.hwui.renderer skiagl</span><br><span class="line">stop</span><br><span class="line">start</span><br></pre></td></tr></table></figure>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://developer.android.com/studio/run/emulator-acceleration#skia-emulator">Configure Emulator Graphics Rendering and Hardware Acceleration</a></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>How to Merge Two Videos without Re-encoding</title>
    <url>/posts/34/</url>
    <content><![CDATA[<h2 id="Concatenation-of-Files-with-Same-Codecs"><a href="#Concatenation-of-Files-with-Same-Codecs" class="headerlink" title="Concatenation of Files with Same Codecs"></a>Concatenation of Files with Same Codecs</h2><p>There are two methods within FFmpeg that can be used to concatenate files of the same type: <a href="https://ffmpeg.org/ffmpeg-formats.html#concat">the concat demuxer &amp; the concat protocol</a></p>
<p>The demuxer is more flexible – it requires the same codecs, but different container formats can be used; and it can be used with any container formats, while the concat protocol only works with a select few containers.</p>
<h3 id="The-Concat-Demuxer"><a href="#The-Concat-Demuxer" class="headerlink" title="The Concat Demuxer"></a>The Concat Demuxer</h3><p>create a text file named vidlist.txt in the following format:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file &#39;&#x2F;path&#x2F;to&#x2F;clip1&#39;</span><br><span class="line">file &#39;&#x2F;path&#x2F;to&#x2F;clip2&#39;</span><br><span class="line">file &#39;&#x2F;path&#x2F;to&#x2F;clip3&#39;</span><br></pre></td></tr></table></figure>
<p>Note that these can be either relative or absolute paths.</p>
<p>Then issue the command:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ffmpeg -f concat -safe 0 -i vidlist.txt -c copy output</span><br></pre></td></tr></table></figure>
<p>The files will be stream copied in the order they appear in the vidlist.txt into the output container. the &quot;copy codec&quot; is <strong>blazing fast</strong>.</p>
<p>Edit: Note that although the docs say you don&#39;t need <code>-safe 0</code> if the paths are relative, my testing indicates it&#39;s a requirement. It&#39;s possible that this may vary with your version of FFmpeg.</p>
<p>There are tips for auto generating the file available in <a href="https://trac.ffmpeg.org/wiki/Concatenate">the docs</a>.</p>
<p>Note: All the clips must already exist or the command will fail because decoding won&#39;t start until the whole list is read.</p>
<h3 id="The-Concat-Protocol"><a href="#The-Concat-Protocol" class="headerlink" title="The Concat Protocol"></a>The Concat Protocol</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ffmpeg -i &quot;concat:video1.ts|video2.ts|video3.ts&quot; -c copy output.ts</span><br></pre></td></tr></table></figure>
<p>Note: as mentioned above the concat protocol is severely limited in what streams and containers it supports so I never use it. The above is only included in an attempt to create a thorough answer. The concat demuxer is a far better choice for most projects.</p>
<p><strong>An alternative suggestion:</strong> Personally I prefer using the Matroska container due to it&#39;s flexibility and low overhead and join videos with the same encoding using</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkvmerge -o output.mkv input1.mkv + input2.mkv</span><br></pre></td></tr></table></figure>
<h2 id="Concatenation-of-Files-with-Different-Codecs"><a href="#Concatenation-of-Files-with-Different-Codecs" class="headerlink" title="Concatenation of Files with Different Codecs"></a>Concatenation of Files with Different Codecs</h2><p>If your clips don&#39;t use the same codecs for audio and video and/or have different rates, your stuck re-encoding to intermediate files prior to joining which as we all know is both time and resource consuming.</p>
<p>Note that <a href="http://www.tldp.org/LDP/abs/html/special-chars.html">special characters</a> can break things so if you have these in your filenames you&#39;ll need to <a href="https://stackoverflow.com/questions/15783701/which-characters-need-to-be-escaped-when-using-bash">deal with them</a>.</p>
<p>Sources: Experience</p>
<p><a href="https://ffmpeg.org/ffmpeg-formats.html">https://ffmpeg.org/ffmpeg-formats.html</a></p>
]]></content>
      <categories>
        <category>其他计算机使用技巧</category>
      </categories>
      <tags>
        <tag>多媒体处理</tag>
        <tag>FFmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Set Flags for OpenMP in CMake</title>
    <url>/posts/37/</url>
    <content><![CDATA[<p>CMake has a <a href="https://cmake.org/cmake/help/latest/module/FindOpenMP.html">standard module</a> for testing if the compiler supports OpenMP.</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.17</span>)</span><br><span class="line"><span class="keyword">project</span>(OpenMPTest)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> main.cpp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>(OpenMP REQUIRED)  <span class="comment"># Find the package</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> PRIVATE OpenMP::OpenMP_CXX)  <span class="comment"># Link against it for C++</span></span><br></pre></td></tr></table></figure>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/56202041/compiling-and-linking-against-openmp-with-appleclang-on-mac-os-x-mojave">https://stackoverflow.com/questions/56202041/compiling-and-linking-against-openmp-with-appleclang-on-mac-os-x-mojave</a></li>
<li><a href="https://stackoverflow.com/questions/12399422/how-to-set-linker-flags-for-openmp-in-cmakes-try-compile-function">https://stackoverflow.com/questions/12399422/how-to-set-linker-flags-for-openmp-in-cmakes-try-compile-function</a></li>
</ul>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>OpenMP</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 对齐中文输出</title>
    <url>/posts/22/</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p>采用居中对齐，如左图</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;:^9&#125;\t&#x27;</span>.<span class="built_in">format</span>(string_var), end = <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>采用左对齐，如右图</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;:&lt;9&#125;\t&#x27;</span>.<span class="built_in">format</span>(string_var), end = <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><img src="/posts/22/python-aligin-01.png" class="" title="运行结果">
<p>未能正确对齐。</p>
<span id="more"></span>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>因为我们的输出结果中有中文，当我们输出的中文宽度不够约定的宽度时，系统会自动进行填充。而问题恰恰出现在填充这里，系统填充的是英文字符，而我们输出占用的是中文字符的宽度。单位不一致，自然会显得很别扭。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>替换填充字符为 <code>chr(12288)</code> 即中文空格。</p>
<p><code>format</code> 方法补充说明如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>:</th>
<th>&lt;填充&gt;</th>
<th>&lt;对齐&gt;</th>
<th>&lt;宽度&gt;</th>
<th>,</th>
<th>.&lt;精度&gt;</th>
<th>&lt;类型&gt;</th>
</tr>
</thead>
<tbody>
<tr>
<td>引导符号</td>
<td>用于填充的单个字符</td>
<td><code>&lt;</code> 左对齐， <code>&gt;</code> 右对齐， <code>^</code> 居中对齐</td>
<td>输出宽度</td>
<td>数字的千位分隔符，适用于整数和浮点数</td>
<td>浮点数小数部分的精度或字符串的最大输出长度</td>
<td>整数类型 <code>b</code>, <code>c</code>, <code>d</code>, <code>o</code>, <code>x</code>, <code>X</code> ，浮点数类型 <code>e</code>, <code>E</code>, <code>f</code>, <code>%</code></td>
</tr>
</tbody>
</table>
</div>
<h2 id="源代码-1"><a href="#源代码-1" class="headerlink" title="源代码"></a>源代码</h2><p>用 <code>chr(12288)</code> 填充，即这里的 <code>&#123;1&#125;</code> 。</p>
<p>居中对齐，如左图</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0:&#123;1&#125;^9&#125;\t&#x27;</span>.<span class="built_in">format</span>(string_var, <span class="built_in">chr</span>(<span class="number">12288</span>)), end = <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>左对齐，如右图</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0:&#123;1&#125;&lt;9&#125;\t&#x27;</span>.<span class="built_in">format</span>(string_var, <span class="built_in">chr</span>(<span class="number">12288</span>)), end = <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="修改后"><a href="#修改后" class="headerlink" title="修改后"></a>修改后</h2><img src="/posts/22/python-aligin-02.png" class="" title="运行结果">
<p>问题解决。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Ubuntu 设置 GRUB 默认启动的内核版本</title>
    <url>/posts/30/</url>
    <content><![CDATA[<p>要修改默认的启动内核，可以执行以下操作。</p>
<p>打开文件 <em>/etc/default/grub</em> ，将 <code>GRUB_DEFAULT</code> 的值更改为您希望选择的菜单选项的索引值。</p>
<p>例如，在启动过程中的 GRUB 菜单中有</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ubuntu</span><br><span class="line">Advanced options for Ubuntu</span><br><span class="line">Windows 10 (loader) (on &#x2F;dev&#x2F;sda1)</span><br><span class="line">system setup</span><br></pre></td></tr></table></figure>
<p>其中 Advananced options for Ubuntu 子菜单如下所示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ubuntu, with Linux 4.13.0-26-generic</span><br><span class="line">Ubuntu, with Linux 4.13.0-26-generic (upstart)</span><br><span class="line">Ubuntu, with Linux 4.13.0-26-generic (recovery mode)</span><br><span class="line">Ubuntu, with Linux 4.10.0-42-generic</span><br><span class="line">Ubuntu, with Linux 4.10.0-42-generic (upstart)</span><br><span class="line">Ubuntu, with Linux 4.10.0-42-generic (recovery mode)</span><br></pre></td></tr></table></figure>
<p>现在，第一个选项是索引 <code>0</code> ，第二个是 <code>1</code> ，第三个是 <code>2</code> ，依此类推。</p>
<p>例如现在想选择 Advanced options for Ubuntu 子菜单中的 Ubuntu, with Linux 4.10.0-42-generic ，则将 <code>GRUB_DEFAULT</code> 设为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GRUB_DEFAULT &#x3D; &quot;1&gt; 3&quot;</span><br></pre></td></tr></table></figure>
<p>使用 &gt; 符号来指定子菜单（注意符号 <code>&gt;</code> 和数字 <code>3</code> 之间有空格，所以需要双引号）。在这种情况下，主菜单中选择第二个选项（索引 1 ），在子菜单中选择第四个选项（索引 3 ）。</p>
<p>菜单选项来自文件 <em>/boot/grub/grub.cfg</em> （不要编辑这个文件）。</p>
<p>一旦对 <em>/etc/default/grub</em> 进行了更改，请保存并运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update-grub</span><br></pre></td></tr></table></figure>
<p>来更新 GRUB 配置文件（必须，否则不生效）。重新启动，现在应该默认启动旧的内核版本。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 路由 history mode 中页面无法渲染的原因及解决</title>
    <url>/posts/21/</url>
    <content><![CDATA[<h2 id="Vue-js-路由-history-mode-中页面无法渲染的原因"><a href="#Vue-js-路由-history-mode-中页面无法渲染的原因" class="headerlink" title="Vue.js 路由 history mode 中页面无法渲染的原因"></a>Vue.js 路由 history mode 中页面无法渲染的原因</h2><p>用 Vue.js + vue-router 创建单页应用，是非常简单的。使用 Vue.js ，我们已经可以通过组合组件来组成应用程序，当你要把 vue-router 添加进来，我们需要做的是，将组件（components）映射到路由（routes），然后告诉 vue-router 在哪里渲染它们。</p>
<p>一般开发的单页应用的 URL 都是带有 # 号的 hash 模式，因为整个应用本身而言就只有一个 HTML ，其他的都是通过 router 来渲染。如果因为业务需要，或者单纯是觉得带 # 号不美观，那么可以使用 history 模式，简单而言就是在 router 的配置文件 index.js 中添加如下一行代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">mode: <span class="string">&#x27;history&#x27;</span></span><br></pre></td></tr></table></figure>
<p>没错，这样 URL 不再会有 # 号，你会发现整个地址栏回到了你熟悉的那个样子，不过接下来介绍的就非常的重要了。</p>
<h2 id="404-错误"><a href="#404-错误" class="headerlink" title="404 错误"></a>404 错误</h2><p>在 history mode 下，如果直接通过地址栏访问路径，那么会出现 404 错误，这是因为调用了 history.pushState API 所以所有的跳转之类的操作都是通过 router 来实现的。要解决这个问题很简单，只需要在后台配置如果 URL 匹配不到任何静态资源，就跳转到默认的 <em>index.html</em> 。以 Apache2 为例，具体配置如下</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;IfModule mod_rewrite.c&gt;</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">RewriteEngine</span></span> <span class="literal">On</span></span><br><span class="line">    <span class="attribute">RewriteBase</span> /</span><br><span class="line">    <span class="attribute"><span class="nomarkup">RewriteRule</span></span> ^index\.html$ -<span class="meta"> [L]</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</span><br><span class="line">    <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-d</span><br><span class="line">    <span class="attribute"><span class="nomarkup">RewriteRule</span></span> . /index.html<span class="meta"> [L]</span></span><br><span class="line"><span class="section">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="每次点击链接都要刷新页面的问题"><a href="#每次点击链接都要刷新页面的问题" class="headerlink" title="每次点击链接都要刷新页面的问题"></a>每次点击链接都要刷新页面的问题</h2><p>众所周知，开发单页应用就是因为那丝般顺滑的体验效果。出现这个的原因是因为使用了 <code>window.location</code> 来跳转，只需要使用使用 router 提供的方法，就能够解决这个问题：</p>
<p>在 <em>main.js</em> 中配置中将 router 绑定到全局</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Vue.prototype.router = router</span><br></pre></td></tr></table></figure>
<p>之后都使用如下的方式来控制跳转</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>.router.push(<span class="string">&#x27;xxx&#x27;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 针对不存在的 URL 的路由配置</title>
    <url>/posts/25/</url>
    <content><![CDATA[<p>利用如下路由配置便可以将所有不存在的 URL 请求都引导到同一个页面（例如 404 页面）。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    path: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">    redirect: <span class="string">&#x27;/404&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress 出现 ERR_TOO_MANY_REDIRECTS 错误的解决办法</title>
    <url>/posts/10/</url>
    <content><![CDATA[<p>一种解决方法是指明网站入口文件为 <em>index.php</em> 。</p>
<p>具体到 Apache2 ，修改网站的配置文件，添加：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;Directory /var/www/example&gt;</span></span><br><span class="line">    <span class="attribute">DirectoryIndex</span> index.php</span><br><span class="line"><span class="section">&lt;/Directory&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其他软件问题</category>
      </categories>
      <tags>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title>gdrive 使用教程</title>
    <url>/posts/2/</url>
    <content><![CDATA[<div class="note danger">
            <p>该文章内容已过期或不再适用。</p>
          </div>
<p>gdrive 是一个好用的 Linux 平台 Google Drive 客户端。</p>
<h2 id="安装-gdrive"><a href="#安装-gdrive" class="headerlink" title="安装 gdrive"></a>安装 gdrive</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -O &#x2F;usr&#x2F;bin&#x2F;gdrive &quot;&#x2F;&#x2F;docs.google.com&#x2F;uc?id&#x3D;0B3X9GlR6EmbnQ0FtZmJJUXEyRTA&amp;export&#x3D;download&quot;</span><br><span class="line">chmod +x &#x2F;usr&#x2F;bin&#x2F;gdrive</span><br></pre></td></tr></table></figure>
<h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gdrive about</span><br></pre></td></tr></table></figure>
<p>然后会出现一个网址并询问验证码。将地址粘贴到浏览器并登录账号，会返回一串代码。</p>
<p>将代码粘贴到控制台下，然后会返回你的 Google 账户信息。</p>
<p>gdrive 会自动将你的 token 保存在用户目录下的 <em>.gdrive</em> 目录中，所以如果不需要了记得把这个文件删掉。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gdrive help</span><br></pre></td></tr></table></figure>
<p>可以查看帮助。</p>
]]></content>
      <categories>
        <category>过期或不适用的文章</category>
      </categories>
  </entry>
  <entry>
    <title>为 IIS 配置 PHP 支持</title>
    <url>/posts/1/</url>
    <content><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>从<a href="http://windows.php.net/download/">官方下载地址</a>下载 PHP 并解压到你希望安装的位置。</p>
<h2 id="添加模块映射"><a href="#添加模块映射" class="headerlink" title="添加模块映射"></a>添加模块映射</h2><p>进入“控制面板 -&gt; 系统和安全 -&gt; 管理工具 -&gt; Internet信息服务(IIS)管理器”。中间窗口打开“处理程序映射”，然后最右边打开“添加模块映射”，按图中步骤填写相关信息。</p>
<img src="/posts/1/01.jpg" class="">
<img src="/posts/1/02.jpg" class="">
<span id="more"></span>
<p>在“可执行文件”一栏找到 PHP 的安装目录，右下角的文件类型改为 <code>exe</code> 即可看到 <em>php-cgi.exe</em> 文件出现了。</p>
<img src="/posts/1/03.jpg" class="">
<img src="/posts/1/04.jpg" class="">
<img src="/posts/1/05.jpg" class="">
<img src="/posts/1/06.jpg" class="">
<h2 id="设置默认文档"><a href="#设置默认文档" class="headerlink" title="设置默认文档"></a>设置默认文档</h2><p>然后可以给网站添加默认文档 <em>default.php</em> 和 <em>index.php</em> 等。</p>
<img src="/posts/1/07.jpg" class="">
<h2 id="修改-PHP-配置文件"><a href="#修改-PHP-配置文件" class="headerlink" title="修改 PHP 配置文件"></a>修改 PHP 配置文件</h2><p>进入 PHP 安装目录，根据需要重命名 <em>php.ini-development</em> 或 <em>php.ini-production</em> 为 <em>php.ini</em> 。</p>
<img src="/posts/1/08.jpg" class="">
<p>打开 <em>php.ini</em> ，将 <code>date.timezone</code> 修改为 <code>date.timezone=&quot;Asia/Shanghai&quot;</code> （即修改当前的时区）。</p>
<p>接着激活需要的扩展选项，即将相应语句前的分号删除，例如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extension&#x3D;mysqli</span><br><span class="line">extension&#x3D;pdo_mysql</span><br><span class="line">extension&#x3D;gd2</span><br></pre></td></tr></table></figure>
<p>再将 <code>; extension_dir = &quot;ext&quot;</code> 前的分号去掉，保存。</p>
<h2 id="测试安装结果"><a href="#测试安装结果" class="headerlink" title="测试安装结果"></a>测试安装结果</h2><p>PHP 环境配置好了，我们就可以测试一下了。在 IIS 中建立一个新网站，网站根目录下新建一个 <em>index.php</em> 文件：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后在浏览器中打开该网页，即可出现类似如下界面。</p>
<img src="/posts/1/09.jpg" class="">
<p>在命令行中进入 php 安装目录下，输入 <code>php -m</code> 命令可查看已开启的扩展模块。</p>
<img src="/posts/1/10.jpg" class="">
]]></content>
      <categories>
        <category>网络服务</category>
      </categories>
      <tags>
        <tag>IIS</tag>
      </tags>
  </entry>
  <entry>
    <title>为 Ubuntu 18.04 编译 4.19.1 版本内核</title>
    <url>/posts/26/</url>
    <content><![CDATA[<h2 id="下载并解压内核源码"><a href="#下载并解压内核源码" class="headerlink" title="下载并解压内核源码"></a>下载并解压内核源码</h2><p>首先获取 root 权限方便操作</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure>
<p>从<a href="https://www.kernel.org/">官方网站</a>下载 4.19.1 版本的 Linux 内核源码。此时我们把它放在 <em>~/linux-4.19.1.tar.xz</em> 。</p>
<p>移动到 <em>/usr/src</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;src</span><br></pre></td></tr></table></figure>
<p>将文件解压到此处</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -xvJf ~&#x2F;linux-4.19.1.tar.xz</span><br></pre></td></tr></table></figure>
<h2 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h2><p>运行以下命令安装依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install g++ make libncurses5-dev libssl-dev build-essential</span><br><span class="line">apt install openssl zlibc minizip libidn11-dev libidn11</span><br><span class="line">apt install bison flex pkg-config libelf-dev</span><br></pre></td></tr></table></figure>
<h2 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h2><p>复制老的配置文件到目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp -vi &#x2F;boot&#x2F;config-&#96;uname -r&#96; .config</span><br></pre></td></tr></table></figure>
<p>配置新版本内核新增特性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make oldconfig</span><br></pre></td></tr></table></figure>
<p>然后利用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure>
<p>编辑配置文件。直接保存退出可以使用默认配置。</p>
<p>然后运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make -j 4</span><br></pre></td></tr></table></figure>
<p>其中 <code>4</code> 建议设置为 <code>CPU 逻辑核心数 * 2</code> 。</p>
<p>完成之后运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make modules_install</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>安装新内核。之后重启系统即可自动使用新内核启动。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>内核编译需求的硬盘空间至少为 40GB 。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>为 Ubuntu 20.04 添加清华大学软件源</title>
    <url>/posts/5/</url>
    <content><![CDATA[<p>Ubuntu 的软件源配置文件为 <em>/etc/apt/sources.list</em> 。首先将系统自带的该文件做个备份。</p>
<p>之后，删除原文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo rm /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<p>然后新建文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<p>输入以下内容并保存，即可使用清华大学软件源镜像。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure>
<p>本镜像仅支持 32 位和 64 位 x86 架构的系统，对于 ARM 或 PowerPC 架构请使用 ubuntu-ports 镜像。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>网络加速</tag>
      </tags>
  </entry>
  <entry>
    <title>为 VPS 开启 BBR 加速</title>
    <url>/posts/4/</url>
    <content><![CDATA[<p>先执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure>
<p>看看内核版本是不是 ≥ 4.9 ，如果不是需要先升级内核。</p>
<p>如果满足条件，执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>
<p>然后验证开启状态，执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br></pre></td></tr></table></figure>
<p>如果结果都有 <code>bbr</code> ，则证明你的内核已成功开启 BBR ！</p>
<p>此外，执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>
<p>看到有 <code>tcp_bbr</code> 模块也可说明 BBR 已启动。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>网络加速</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 WSL (Ubuntu) 配置 Yii2 开发环境</title>
    <url>/posts/12/</url>
    <content><![CDATA[<h2 id="安装-WSL"><a href="#安装-WSL" class="headerlink" title="安装 WSL"></a>安装 WSL</h2><p>首先在 “控制面板 -&gt; 程序 -&gt; 程序和功能 -&gt; 启用或关闭 Windows 功能” 里开启“适用于 Linux 的 Windows 子系统”。</p>
<p>接着在 Microsoft Store 里安装 Ubuntu ，安装完成后打开 Ubuntu ，进行初始化配置，此时需要设置一个用户名和密码。</p>
<h2 id="配置-WSL-环境"><a href="#配置-WSL-环境" class="headerlink" title="配置 WSL 环境"></a>配置 WSL 环境</h2><p>再次打开 Ubuntu ，将系统软件源切换为清华大学软件源（或者其他你偏好的软件源）。</p>
<p>删除原有软件源：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rm &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure>
<p>添加新软件源：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>在打开的文本编辑器里键入以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure>
<p>编辑完成后，使用 <code>Ctrl+O</code> 保存，再使用 <code>Ctrl+X</code> 退出。</p>
<p>接下来更新系统。注意此步可能需要较长时间。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt dist-upgrade</span><br></pre></td></tr></table></figure>
<h2 id="安装必要软件"><a href="#安装必要软件" class="headerlink" title="安装必要软件"></a>安装必要软件</h2><p>首先安装 Apache2 网络服务器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install apache2</span><br></pre></td></tr></table></figure>
<p>接下来安装 MariaDB 服务端和客户端：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install mariadb-server mariadb-client</span><br></pre></td></tr></table></figure>
<p>接下来安装 PHP 和相关组件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install php php-mysql php-zip php-xml php-mbstring</span><br></pre></td></tr></table></figure>
<h2 id="放置并链接项目文件"><a href="#放置并链接项目文件" class="headerlink" title="放置并链接项目文件"></a>放置并链接项目文件</h2><p>将项目文件放置到你想要的位置，如 <em>X:\example</em> ，并建立 Ubuntu 与 Windows 文件的软链接。</p>
<p>例如，将 Windows 中的 <em>X:\example</em> 链接到 Ubuntu 中的 <em>/var/www/example</em> ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -s &#x2F;mnt&#x2F;x&#x2F;example &#x2F;var&#x2F;www&#x2F;example</span><br></pre></td></tr></table></figure>
<h2 id="配置项目环境"><a href="#配置项目环境" class="headerlink" title="配置项目环境"></a>配置项目环境</h2><p>切换到项目网站根目录，这里是 <em>/var/www/example</em> ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www&#x2F;example</span><br></pre></td></tr></table></figure>
<p>安装 composer ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install composer</span><br></pre></td></tr></table></figure>
<p>安装 Yii2 框架文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">composer install</span><br></pre></td></tr></table></figure>
<h2 id="配置网络服务器环境"><a href="#配置网络服务器环境" class="headerlink" title="配置网络服务器环境"></a>配置网络服务器环境</h2><p>在 Apache2 虚拟主机配置文件里配置好网站的虚拟主机。下面是一段示例。</p>
<p>创建虚拟主机配置文件，注意文件名不要与已有的配置文件冲突：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;001-example.conf</span><br></pre></td></tr></table></figure>
<p>编辑文件：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:80</span>&gt;</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">ServerName</span></span> example.com</span><br><span class="line">    <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> /var/www/example</span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure>
<p>启用新建的配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo a2ensite 001-example.conf</span><br></pre></td></tr></table></figure>
<p>如果 Apache2 服务器未启动，启动 Apache2 服务器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service apache2 start</span><br></pre></td></tr></table></figure>
<p>如果 Apache2 服务器已启动，重启 Apache2 服务器：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service apache2 restart</span><br></pre></td></tr></table></figure>
<h2 id="解决权限问题"><a href="#解决权限问题" class="headerlink" title="解决权限问题"></a>解决权限问题</h2><p>在 Ubuntu 中执行以下指令，注意替换 <code>x</code> 和 <code>X</code> 为你想要的盘符：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo umount &#x2F;mnt&#x2F;x</span><br><span class="line">sudo mount -t drvfs X: &#x2F;mnt&#x2F;x -o metadata</span><br></pre></td></tr></table></figure>
<p>现在可以尝试在浏览器中打开网站了。</p>
<h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><p>如果发现网页中时间显示不正确，可能是 PHP 时区错误的问题。在 <em>php.ini</em> 中修改或添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data.timezone &#x3D; &quot;Asia&#x2F;Shanghai&quot;;</span><br></pre></td></tr></table></figure>
<p>即可解决问题。</p>
]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Yii2</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>使用淘宝源加速 npm 下载</title>
    <url>/posts/19/</url>
    <content><![CDATA[<div class="note danger">
            <p>该文章内容已过期或不再适用。</p>
          </div>
<div class="note info">
            <p>npm 现在的下载速度已经足够快，无需再使用镜像源。</p>
          </div>
<p><a href="http://npm.taobao.org/">淘宝 npm 地址</a></p>
<p>有很多方法来配置 npm 的 registry 地址，下面根据不同情境列出几种比较常用的方法。以淘宝 npm 镜像举例。</p>
<h2 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm --registry https:&#x2F;&#x2F;registry.npm.taobao.org install xxx</span><br></pre></td></tr></table></figure>
<h2 id="持久使用"><a href="#持久使用" class="headerlink" title="持久使用"></a>持久使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p>配置后可通过下面方式来验证是否成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure>
<h2 id="通过-cnpm-使用"><a href="#通过-cnpm-使用" class="headerlink" title="通过 cnpm 使用"></a>通过 cnpm 使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>过期或不适用的文章</category>
      </categories>
  </entry>
  <entry>
    <title>使用清华大学 PyPI 镜像加速 pip 下载</title>
    <url>/posts/20/</url>
    <content><![CDATA[<p>PyPI 镜像每 5 分钟同步一次。</p>
<h2 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple some-package</span><br></pre></td></tr></table></figure>
<p>注意，simple 不能少, 是 https 而不是 http 。</p>
<h2 id="设为默认"><a href="#设为默认" class="headerlink" title="设为默认"></a>设为默认</h2><p>创建或修改：</p>
<ul>
<li><code>~/.config/pip/pip.conf</code> (Linux)</li>
<li><code>%APPDATA%\pip\pip.ini</code> (Windows 10)</li>
<li><code>$HOME/Library/Application Support/pip/pip.conf</code> (macOS)</li>
</ul>
<p>将 <code>index-url</code> 修改为 <code>https://pypi.tuna.tsinghua.edu.cn/simple</code> ，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>网络加速</tag>
        <tag>PyPI</tag>
      </tags>
  </entry>
  <entry>
    <title>修改 Vue.js 应用中的网页标题</title>
    <url>/posts/24/</url>
    <content><![CDATA[<h2 id="配置路由属性"><a href="#配置路由属性" class="headerlink" title="配置路由属性"></a>配置路由属性</h2><p>可以简单地在路由中设置 <code>meta</code> 属性。</p>
<p>例如在 <em>src/router/index.js</em> 中</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">routes: [</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">        meta: &#123; <span class="attr">title</span>: <span class="string">&#x27;...&#x27;</span> &#125;,</span><br><span class="line">        component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h2 id="使用路由钩子"><a href="#使用路由钩子" class="headerlink" title="使用路由钩子"></a>使用路由钩子</h2><p>利用路由的 <code>beforeEach</code> 方法修改网站标题。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.title = to.meta.title</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>免费为网站开启 SSL 访问支持</title>
    <url>/posts/9/</url>
    <content><![CDATA[<h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><p>本教程基于以下系统环境写作：</p>
<ul>
<li>Ubuntu 18.04</li>
<li>Apache2 2.4.29</li>
</ul>
<h2 id="申请免费证书"><a href="#申请免费证书" class="headerlink" title="申请免费证书"></a>申请免费证书</h2><p>SSL 免费证书申请地址为 <a href="https://www.sslforfree.com/">SSL for Free</a> 。</p>
<p>按照网站指示申请证书。</p>
<div class="note warning">
            <p>对于各级次级域名，如 <code>*.example.com</code> 或 <code>*.example.example.com</code> 均需要单独申请证书。</p>
          </div>
<span id="more"></span>
<h2 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h2><p>开启 Apache2 的 SSL 模块：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a2enmod ssl</span><br></pre></td></tr></table></figure>
<p>下载下来的证书分为三个文件。建议将文件重命名并放置到：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/ssl/example_com.crt            <span class="comment"># 原名certificate.crt</span></span><br><span class="line">/etc/ssl/example_com_ca_bundle.crt  <span class="comment"># 原名ca_bundle.crt</span></span><br><span class="line">/etc/ssl/private/example_com.key    <span class="comment"># 原名private.key</span></span><br></pre></td></tr></table></figure>
<p>在 <em>/etc/apache2/sites-available</em> 中，新建一份你要开启 https 访问的网站的配置文件的拷贝，如 <em>000-default-ssl.conf</em> 。根据实际情况，修改配置文件为如下形式：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:443</span>&gt;</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">ServerName</span></span> example.com</span><br><span class="line">    <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> /var/www/</span><br><span class="line"></span><br><span class="line">    <span class="attribute">SSLEngine</span> <span class="literal">on</span></span><br><span class="line">    <span class="attribute">SSLCertificateFile</span> /etc/ssl/example_com.crt</span><br><span class="line">    <span class="attribute">SSLCertificateKeyFile</span> /etc/ssl/private/example_com.key</span><br><span class="line">    <span class="attribute">SSLCertificateChainFile</span> /etc/ssl/private/example_com.key</span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure>
<p>启用新的配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a2ensite 000-default-ssl.conf</span><br></pre></td></tr></table></figure>
<p>重启 Apache2 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service apache2 restart</span><br></pre></td></tr></table></figure>
<h2 id="配置自动跳转"><a href="#配置自动跳转" class="headerlink" title="配置自动跳转"></a>配置自动跳转</h2><p>开启 Apache2 的 rewrite 模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a2enmod rewrite</span><br></pre></td></tr></table></figure>
<p>在 HTTP 访问的配置文件中（如 <em>000-default.conf</em> ），在 <code>&lt;VirtualHost *:80&gt;&lt;/VirtualHost&gt;</code> 标签内随便一个地方加入以下三行：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute"><span class="nomarkup">RewriteEngine</span></span> <span class="literal">on</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;HTTPS&#125;</span> !=<span class="literal">on</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteRule</span></span> ^(.*) https://<span class="variable">%&#123;SERVER_NAME&#125;</span>$<span class="number">1</span><span class="meta"> [L,R=301]</span></span><br></pre></td></tr></table></figure>
<p>重启 Apache2 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service apache2 restart</span><br></pre></td></tr></table></figure>
<p>至此，SSL 访问全部配置完成。</p>
]]></content>
      <categories>
        <category>网络服务</category>
      </categories>
      <tags>
        <tag>SSL</tag>
      </tags>
  </entry>
  <entry>
    <title>删除 Git 远程分支删除后本地遗留的垃圾分支信息</title>
    <url>/posts/23/</url>
    <content><![CDATA[<p>使用 <code>git branch -a</code> 命令可以查看所有本地分支和远程分支（使用 <code>git branch -r</code> 可以只查看远程分支）。</p>
<p>发现很多在远程仓库已经删除的分支在本地依然可以看到。</p>
<span id="more"></span>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line">  movtop</span><br><span class="line">  task_develop</span><br><span class="line">* weibo</span><br><span class="line">  remotes&#x2F;origin&#x2F;HEAD -&gt; origin&#x2F;task_develop</span><br><span class="line">  remotes&#x2F;origin&#x2F;develop</span><br><span class="line">  remotes&#x2F;origin&#x2F;fix_composer_repositories_type</span><br><span class="line">  remotes&#x2F;origin&#x2F;join_weixin_module</span><br><span class="line">  remotes&#x2F;origin&#x2F;master</span><br><span class="line">  remotes&#x2F;origin&#x2F;mining-backup</span><br><span class="line">  remotes&#x2F;origin&#x2F;movtop</span><br><span class="line">  remotes&#x2F;origin&#x2F;right</span><br><span class="line">  remotes&#x2F;origin&#x2F;schedule_dev</span><br><span class="line">  remotes&#x2F;origin&#x2F;stuff_web_fix</span><br><span class="line">  remotes&#x2F;origin&#x2F;task_develop</span><br><span class="line">  remotes&#x2F;origin&#x2F;task_idea</span><br><span class="line">  remotes&#x2F;origin&#x2F;task_temp</span><br><span class="line">  remotes&#x2F;origin&#x2F;task_yqj</span><br><span class="line">  remotes&#x2F;origin&#x2F;weibo</span><br><span class="line">  remotes&#x2F;origin&#x2F;weixin_temp</span><br></pre></td></tr></table></figure>
<p>使用命令 <code>git remote show origin</code> ，可以查看 remote 地址，远程分支，还有本地分支与之相对应关系等信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote show origin</span><br><span class="line"></span><br><span class="line">* remote origin</span><br><span class="line">  Fetch URL: https:&#x2F;&#x2F;xxx@gitlab.com&#x2F;xxx&#x2F;xxx.git</span><br><span class="line">  Push  URL: https:&#x2F;&#x2F;xxx@gitlab.com&#x2F;xxx&#x2F;xxx.git</span><br><span class="line">  HEAD branch: task_develop</span><br><span class="line">  Remote branches:</span><br><span class="line">    master                                             tracked</span><br><span class="line">    mining-backup                                      tracked</span><br><span class="line">    refs&#x2F;remotes&#x2F;origin&#x2F;develop                        stale (use &#39;git remote prune&#39; to remove)</span><br><span class="line">    refs&#x2F;remotes&#x2F;origin&#x2F;fix_composer_repositories_type stale (use &#39;git remote prune&#39; to remove)</span><br><span class="line">    refs&#x2F;remotes&#x2F;origin&#x2F;join_weixin_module             stale (use &#39;git remote prune&#39; to remove)</span><br><span class="line">    refs&#x2F;remotes&#x2F;origin&#x2F;movtop                         stale (use &#39;git remote prune&#39; to remove)</span><br><span class="line">    refs&#x2F;remotes&#x2F;origin&#x2F;right                          stale (use &#39;git remote prune&#39; to remove)</span><br><span class="line">    refs&#x2F;remotes&#x2F;origin&#x2F;schedule_dev                   stale (use &#39;git remote prune&#39; to remove)</span><br><span class="line">    refs&#x2F;remotes&#x2F;origin&#x2F;stuff_web_fix                  stale (use &#39;git remote prune&#39; to remove)</span><br><span class="line">    refs&#x2F;remotes&#x2F;origin&#x2F;task_temp                      stale (use &#39;git remote prune&#39; to remove)</span><br><span class="line">    refs&#x2F;remotes&#x2F;origin&#x2F;weibo                          stale (use &#39;git remote prune&#39; to remove)</span><br><span class="line">    task_develop                                       tracked</span><br><span class="line">    task_idea                                          tracked</span><br><span class="line">    task_yqj                                           tracked</span><br><span class="line">    weixin_temp                                        tracked</span><br><span class="line">  Local branches configured for &#39;git pull&#39;:</span><br><span class="line">    movtop       merges with remote movtop</span><br><span class="line">    task_develop merges with remote task_develop</span><br><span class="line">    weibo        merges with remote weibo</span><br><span class="line">  Local ref configured for &#39;git push&#39;:</span><br><span class="line">    task_develop pushes to task_develop (up to date)</span><br></pre></td></tr></table></figure>
<p>此时我们可以看到那些远程仓库已经不存在的分支。根据提示，使用 <code>git remote prune origin</code> 命令。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ git remote prune origin</span><br><span class="line"></span><br><span class="line">Pruning origin</span><br><span class="line">URL: https:&#x2F;&#x2F;xxx@gitlab.com&#x2F;xxx&#x2F;xxx.git</span><br><span class="line"> * [pruned] origin&#x2F;develop</span><br><span class="line"> * [pruned] origin&#x2F;fix_composer_repositories_type</span><br><span class="line"> * [pruned] origin&#x2F;join_weixin_module</span><br><span class="line"> * [pruned] origin&#x2F;movtop</span><br><span class="line"> * [pruned] origin&#x2F;right</span><br><span class="line"> * [pruned] origin&#x2F;schedule_dev</span><br><span class="line"> * [pruned] origin&#x2F;stuff_web_fix</span><br><span class="line"> * [pruned] origin&#x2F;task_temp</span><br><span class="line"> * [pruned] origin&#x2F;weibo</span><br></pre></td></tr></table></figure>
<p>这样就删除了那些远程仓库不存在的分支。</p>
]]></content>
      <categories>
        <category>版本控制系统</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>删除 Ubuntu 中多余的内核</title>
    <url>/posts/6/</url>
    <content><![CDATA[<p>Ubuntu 多次升级以后系统中会存在大量不同版本的内核，而每个内核占用非常多的硬盘空间，所以需要定期清理没用的内核，但最好保留最近两个内核，因为有的软件需要依赖特定内核而不一定是最新的。</p>
<p>首先查询当前我们使用的是内核是哪个版本的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure>
<p>查询系统中装了哪些内核：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg --get-selections | grep linux</span><br></pre></td></tr></table></figure>
<p>多余的内核可以通过命令删除：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt remove &lt;内核文件名称&gt;</span><br></pre></td></tr></table></figure>
<p>执行完上面命令后接着执行以下命令查看内核是否都删除干净了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg --get-selections | grep linux</span><br></pre></td></tr></table></figure>
<p>如果没干净继续删除。有的内核后面会显示是 <code>deinstall</code> ，那需要通过：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dpkg --get-selections | grep deinstall | sed &#39;s&#x2F;deinstall&#x2F;\lpurge&#x2F;&#39; | dpkg --set-selections; dpkg -Pa</span><br></pre></td></tr></table></figure>
<p>进行删除。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>取消 MySQL/MariaDB root 用户免密码登录功能</title>
    <url>/posts/18/</url>
    <content><![CDATA[<div class="note danger">
            <p>该文章内容已过期或不再适用。</p>
          </div>
<div class="note warning">
            <p>尽量不要使用数据库 root 用户。建议为每个数据库应用建立单独的用户。</p>
          </div>
<p>在使用 MySQL/MariaDB 时，如果使用的是系统 root 用户，可以直接在控制台中输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql</span><br></pre></td></tr></table></figure>
<p>免密码使用数据库 root 用户登录数据库。</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在 <code>user</code> 表中有一列叫做 <code>plugin</code> ：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>, authentication_string, plugin <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+------+-----------------------+-------------+</span><br><span class="line">| user | authentication_string | plugin      |</span><br><span class="line">+------+-----------------------+-------------+</span><br><span class="line">| root | *                     | auth_socket |</span><br><span class="line">+------+-----------------------+-------------+</span><br><span class="line">1 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>其中的 <code>auth_socket</code> 让你能方便地作为 root 用户从控制台免密码登录。但这同时也禁用了密码登录，而且你不能使用其它客户端进行登录。</p>
<span id="more"></span>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>如果必须要使用数据库 root 用户，则需要做如下修改。注意按照自己的数据库版本选择合适的命令。</p>
<h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><h4 id="5-7"><a href="#5-7" class="headerlink" title="5.7"></a>5.7</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;YOUR PASSWORD HERE&#x27;</span>;</span><br><span class="line">update mysql.user <span class="keyword">set</span> plugin <span class="operator">=</span> <span class="string">&#x27;mysql_native_password&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> host <span class="operator">=</span> <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<h4 id="8-0"><a href="#8-0" class="headerlink" title="8.0"></a>8.0</h4><p>待补充。</p>
<h3 id="MariaDB"><a href="#MariaDB" class="headerlink" title="MariaDB"></a>MariaDB</h3><h4 id="lt-10-2"><a href="#lt-10-2" class="headerlink" title="&lt;10.2"></a>&lt;10.2</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="operator">=</span> password(<span class="string">&#x27;YOUR PASSWORD HERE&#x27;</span>);</span><br><span class="line">update mysql.user <span class="keyword">set</span> plugin <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> host <span class="operator">=</span> <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<h4 id="≥10-2"><a href="#≥10-2" class="headerlink" title="≥10.2"></a>≥10.2</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;YOUR PASSWORD HERE&#x27;</span>;</span><br><span class="line">update mysql.user <span class="keyword">set</span> plugin <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> host <span class="operator">=</span> <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>如果你使用的是 Ubuntu 等 Debian 系系统，还需要打开 <em>/etc/mysql/debian.cnf</em> 。如果其中的 <code>user</code> 字段是 <code>root</code> ，则需要将其中对应的 <code>password</code> 字段设置为你刚才设置的密码。 如果 <code>user</code> 字段不是 <code>root</code> ，则无需修改。</p>
]]></content>
      <categories>
        <category>过期或不适用的文章</category>
      </categories>
  </entry>
  <entry>
    <title>在 IntelliJ IDEA 中使用 JUnit 单元测试</title>
    <url>/posts/31/</url>
    <content><![CDATA[<h2 id="引用文件"><a href="#引用文件" class="headerlink" title="引用文件"></a>引用文件</h2><p>首先需要引用 JUnit 库文件。</p>
<p>依次操作 File -&gt; Project Structure… -&gt; Libraies -&gt; 加号 -&gt; Java -&gt; 选择 IDEA 安装路径 <em>lib</em> 文件夹中的 <em>junit-4.12.jar</em> 和 <em>hamcrest-core-1.3.jar</em></p>
<h2 id="编写测试代码"><a href="#编写测试代码" class="headerlink" title="编写测试代码"></a>编写测试代码</h2><h3 id="TestJUnit-java"><a href="#TestJUnit-java" class="headerlink" title="TestJUnit.java"></a>TestJUnit.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.assertEquals;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJUnit</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAdd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">&quot;Junit is working fine.&quot;</span>;</span><br><span class="line">        assertEquals(<span class="string">&quot;Junit is working fine.&quot;</span>, str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="TestRunner-java"><a href="#TestRunner-java" class="headerlink" title="TestRunner.java"></a>TestRunner.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.runner.JUnitCore;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.Result;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.notification.Failure;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRunner</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Result result = JUnitCore.runClasses(TestJUnit.class);</span><br><span class="line">    <span class="keyword">for</span> (Failure failure : result.getFailures()) &#123;</span><br><span class="line">        System.out.println(failure.toString());</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(result.wasSuccessful());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>期望输出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">true</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>IntelliJ IDEA</tag>
        <tag>JUnit</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Ubuntu 18.04 启动时显示高级选项</title>
    <url>/posts/27/</url>
    <content><![CDATA[<p>在引导时按住 <code>Shift</code> 键即可进入高级选项菜单。如果想要每次都显示的话可以进行如下修改。</p>
<p>打开 <em>/etc/default/grub</em> ，将 <code>GRUB_TIMEOUT</code> 设置为 <code>-1</code> 。</p>
<p>运行命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update-grub</span><br></pre></td></tr></table></figure>
<p>完成修改。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Ubuntu 中安装 Python 3.7</title>
    <url>/posts/17/</url>
    <content><![CDATA[<div class="note danger">
            <p>该文章内容已过期或不再适用。</p>
          </div>
<div class="note warning">
            <p>建议使用 <a href="https://www.anaconda.com/">Anaconda</a> 安装任意版本的 Python 。</p>
          </div>
<h2 id="系统准备"><a href="#系统准备" class="headerlink" title="系统准备"></a>系统准备</h2><p>安装一些必要的依赖包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install libffi-dev libbz2-dev libssl-dev</span><br><span class="line">apt install libreadline7 libreadline-dev libsqlite3-dev</span><br><span class="line">apt install libncurses5 libncurses5-dev libncursesw5</span><br><span class="line">apt install libgdbm-dev liblzma-dev uuid-dev zlib1g-dev</span><br></pre></td></tr></table></figure>
<p>如果 lib 名称不确认的话，可以使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-cache search</span><br></pre></td></tr></table></figure>
<p>查找。</p>
<p>另外可能还需要安装 git, g++, make</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install git g++ make</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="安装-pyenv"><a href="#安装-pyenv" class="headerlink" title="安装 pyenv"></a>安装 pyenv</h2><p>pyenv 是 shell 脚本编写的，只需要下载然后指定环境变量就可以了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git:&#x2F;&#x2F;github.com&#x2F;yyuu&#x2F;pyenv.git ~&#x2F;.pyenv</span><br><span class="line">echo &#39;export PYENV_ROOT&#x3D;&quot;$HOME&#x2F;.pyenv&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line">echo &#39;export PATH&#x3D;&quot;$PYENV_ROOT&#x2F;bin:$PATH&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line">echo &#39;eval &quot;$(pyenv init -)&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line">exec $SHELL -l</span><br></pre></td></tr></table></figure>
<h2 id="安装-Python-3-7-0"><a href="#安装-Python-3-7-0" class="headerlink" title="安装 Python 3.7.0"></a>安装 Python 3.7.0</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyenv install 3.7.0 -v</span><br></pre></td></tr></table></figure>
<p>安装完成之后，需要使用如下命令对数据库进行更新</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyenv rehash</span><br></pre></td></tr></table></figure>
<p>设置全局 Python 版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyenv global 3.7.0</span><br></pre></td></tr></table></figure>
<p>此时便可以尝试输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure>
<p>验证一下 Python 版本了。</p>
<h2 id="后续配置"><a href="#后续配置" class="headerlink" title="后续配置"></a>后续配置</h2><p>更新 pip</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure>
<p>更新 setuptools</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m pip install --upgrade setuptools</span><br></pre></td></tr></table></figure>
<p>安装 ipython （可选）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install ipython</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>过期或不适用的文章</category>
      </categories>
  </entry>
  <entry>
    <title>在 Ubuntu 中安装最新版的 Node.js</title>
    <url>/posts/16/</url>
    <content><![CDATA[<h2 id="卸载已安装的软件包"><a href="#卸载已安装的软件包" class="headerlink" title="卸载已安装的软件包"></a>卸载已安装的软件包</h2><p>如果以前安装过老版本的 nodejs 和 npm ，先进行卸载。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt remove npm nodejs --purge</span><br></pre></td></tr></table></figure>
<p>进入 <em>/usr/local/bin</em> 和 <em>/usr/bin</em> 目录中，若有 node 或者 npm 文件，全部删除。</p>
<h2 id="使用-NodeSource-在线安装"><a href="#使用-NodeSource-在线安装" class="headerlink" title="使用 NodeSource 在线安装"></a>使用 NodeSource 在线安装</h2><p><a href="https://github.com/nodesource/distributions">NodeSource 仓库地址</a></p>
<h3 id="Node-js-v13-x"><a href="#Node-js-v13-x" class="headerlink" title="Node.js v13.x:"></a>Node.js v13.x:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -sL https:&#x2F;&#x2F;deb.nodesource.com&#x2F;setup_13.x | sudo -E bash -</span><br></pre></td></tr></table></figure>
<p>为了加快安装速度，可以切换成清华源（此步可跳过）。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;nodesource.list</span><br></pre></td></tr></table></figure>
<p>将内容修改为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;nodesource&#x2F;deb_13.x bionic main</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;nodesource&#x2F;deb_13.x bionic main</span><br></pre></td></tr></table></figure>
<p>其中， Ubuntu 的版本 <code>bionic</code> 请自行根据实际修改。</p>
<p>最后安装 nodejs ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y nodejs</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>在没有 Root 权限的情况下删除或禁用 Android 系统应用</title>
    <url>/posts/29/</url>
    <content><![CDATA[<p>首先安装并配置好 adb 工具，并选择以下命令中的一条执行。</p>
<p>将 <code>PACKAGE</code> 替换为应用包名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb shell pm block PACKAGE <span class="comment"># Kitkat 可用</span></span><br><span class="line">adb shell pm hide PACKAGE <span class="comment"># Lollipop 可用</span></span><br><span class="line">adb shell pm uninstall --user 0 PACKAGE <span class="comment"># Marshmallow 和 Nougat 可用</span></span><br></pre></td></tr></table></figure>
<p>注意第三种命令可能会失效，而且在重新安装或恢复出厂设置之前无法找回被删除的软件。</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>将 Fork 出来的 Git 仓库与上游仓库同步</title>
    <url>/posts/14/</url>
    <content><![CDATA[<p>以下步骤均基于文件无冲突的情况，如果出现冲突，需要先解决冲突才能继续。</p>
<p>添加上游仓库：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add upstream &lt;上游仓库 URL&gt;</span><br></pre></td></tr></table></figure>
<p>拉取上游仓库（可选使用 <code>rebase</code> 参数）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull --rebase upstream master</span><br></pre></td></tr></table></figure>
<p>将本地仓库上传到个人远程仓库：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>版本控制系统</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>开启 MySQL 远程访问权限</title>
    <url>/posts/8/</url>
    <content><![CDATA[<h2 id="新增用户并授权"><a href="#新增用户并授权" class="headerlink" title="新增用户并授权"></a>新增用户并授权</h2><p>使用 root 用户执行：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;your_username&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;your_password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> `your_schema_name`.`your_table_name` <span class="keyword">TO</span> <span class="string">&#x27;your_username&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
<h2 id="允许所有地址访问"><a href="#允许所有地址访问" class="headerlink" title="允许所有地址访问"></a>允许所有地址访问</h2><p>注释掉 <em>/etc/mysql/mysql.conf.d/mysqld.cnf</em> （或类似文件）中的 <code>bind-address = 127.0.0.1</code> 。</p>
<p>重启 MySQL：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库管理系统</category>
      </categories>
      <tags>
        <tag>MySQL/MariaDB</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 OpenSSL 升级后 Shadowsocks 服务报错的问题</title>
    <url>/posts/3/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>升级 OpenSSL 后 Shadowsocks 可能无法启动，报错如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;bin&#x2F;ssserver&quot;, line 9, in</span><br><span class="line">        load_entry_point(&#39;shadowsocks&#x3D;&#x3D;2.8.2&#39;, &#39;console_scripts&#39;, &#39;ssserver&#39;)()</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;site-packages&#x2F;shadowsocks&#x2F;server.py&quot;, line 34, in main</span><br><span class="line">        config &#x3D; shell.get_config(False)</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;site-packages&#x2F;shadowsocks&#x2F;shell.py&quot;, line 262, in get_config</span><br><span class="line">        check_config(config, is_local)</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;site-packages&#x2F;shadowsocks&#x2F;shell.py&quot;, line 124, in check_config</span><br><span class="line">        encrypt.try_cipher(config[&#39;password&#39;], config[&#39;method&#39;])</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;site-packages&#x2F;shadowsocks&#x2F;encrypt.py&quot;, line 44, in try_cipher</span><br><span class="line">        Encryptor(key, method)</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;site-packages&#x2F;shadowsocks&#x2F;encrypt.py&quot;, line 83, in __init__</span><br><span class="line">        random_string(self._method_info[1]))</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;site-packages&#x2F;shadowsocks&#x2F;encrypt.py&quot;, line 109, in get_cipher</span><br><span class="line">        return m[2](method, key, iv, op)</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;site-packages&#x2F;shadowsocks&#x2F;crypto&#x2F;openssl.py&quot;, line 76, in __init__</span><br><span class="line">        load_openssl()</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;site-packages&#x2F;shadowsocks&#x2F;crypto&#x2F;openssl.py&quot;, line 52, in load_openssl</span><br><span class="line">        libcrypto.EVP_CIPHER_CTX_cleanup.argtypes &#x3D; (c_void_p,)</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib64&#x2F;python2.7&#x2F;ctypes&#x2F;__init__.py&quot;, line 373, in __getattr__</span><br><span class="line">        func &#x3D; self.__getitem__(name)</span><br><span class="line">    File &quot;&#x2F;usr&#x2F;lib64&#x2F;python2.7&#x2F;ctypes&#x2F;__init__.py&quot;, line 378, in __getitem__</span><br><span class="line">        func &#x3D; self._FuncPtr((name_or_ordinal, self))</span><br><span class="line">AttributeError: &#x2F;usr&#x2F;local&#x2F;ssl&#x2F;lib&#x2F;libcrypto.so.1.1: undefined symbol: EVP_CIPHER_CTX_cleanup</span><br><span class="line">shadowsocks start failed</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>这个问题是由于在新版 OpenSSL 中，废弃了 <code>EVP_CIPHER_CTX_cleanup()</code> 函数。</p>
<p>如官网中所说：</p>
<div class="note info">
            <p><code>EVP_CIPHER_CTX</code> was made opaque in OpenSSL 1.1.0. As a result, <code>EVP_CIPHER_CTX_reset()</code> appeared and <code>EVP_CIPHER_CTX_cleanup()</code> disappeared. <code>EVP_CIPHER_CTX_init()</code> remains as an alias for <code>EVP_CIPHER_CTX_reset()</code>.</p>
          </div>
<p>实际上， <code>EVP_CIPHER_CTX_reset()</code> 函数替代了 <code>EVP_CIPHER_CTX_cleanup()</code> 函数。</p>
<p><code>EVP_CIPHER_CTX_reset()</code> 函数说明：</p>
<div class="note info">
            <p><code>EVP_CIPHER_CTX_reset()</code> clears all information from a cipher context and free up any allocated memory associate with it, except the ctx itself. This function should be called anytime ctx is to be reused for another <code>EVP_CipherInit()</code> / <code>EVP_CipherUpdate()</code> / <code>EVP_CipherFinal()</code> series of calls.</p>
          </div>
<p><code>EVP_CIPHER_CTX_cleanup()</code> 函数说明：</p>
<div class="note info">
            <p><code>EVP_CIPHER_CTX_cleanup()</code> clears all information from a cipher context and free up any allocated memory associate with it. It should be called after all operations using a cipher are complete so sensitive information does not remain in memory.</p>
          </div>
<p>可以看出，二者功能基本上相同，都是释放内存，只是应该调用的时机稍有不同，所以用 <code>EVP_CIPHER_CTX_reset()</code> 代替 <code>EVP_CIPHER_CTX_cleanup()</code> 问题不大。</p>
<h2 id="修复方法"><a href="#修复方法" class="headerlink" title="修复方法"></a>修复方法</h2><p>编辑文件 <em>/usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py</em> ，跳转到52行（以 Shadowsocks 2.8.2 版本为例，其他版本搜索一下 cleanup ），将 <code>libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)</code> 改为 <code>libcrypto.EVP_CIPHER_CTX_reset.argtypes = (c_void_p,)</code> 。</p>
<p>再次搜索 cleanup （全文件共2处，此处位于111行），将 <code>libcrypto.EVP_CIPHER_CTX_cleanup(self._ctx)</code> 改为 <code>libcrypto.EVP_CIPHER_CTX_reset(self._ctx)</code> 。</p>
<p>保存并退出。</p>
<p>再次尝试启动 Shadowsocks 服务，现在应该能够正常启动了。</p>
]]></content>
      <categories>
        <category>网络服务</category>
      </categories>
      <tags>
        <tag>Shadowsocks</tag>
        <tag>OpenSSL</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 Qt 应用程序发布时动态链接库缺少的问题</title>
    <url>/posts/15/</url>
    <content><![CDATA[<p>首先编译一个 release 版本，然后把生成的 exe 拷贝到一个新的文件夹下面。</p>
<p>接着找到你的 <em>windeployqt.exe</em> 文件，例如 <em>C:\Qt\5.9.6\mingw53_32\bin\windeployqt.exe</em> 。</p>
<p>将 minGW 添加到环境变量，例如路径 <em>C:\Qt\Tools\mingw530_32\bin</em> 。</p>
<p>打开命令行窗口，然后进入存放你的 exe 文件的文件夹，执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Qt\5.9.6\mingw53_32\bin\windeployqt.exe &lt;你的 exe 文件名&gt; --release</span><br></pre></td></tr></table></figure>
<p>这样必要的文件就被放进了该文件夹。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 VMware 虚拟机共享文件夹的权限问题</title>
    <url>/posts/28/</url>
    <content><![CDATA[<p>在文件 <em>/etc/fstab</em> 中加入新的一行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.host:&#x2F; &#x2F;mnt&#x2F;hgfs fuse.vmhgfs-fuse allow_other,defaults 0 0</span><br></pre></td></tr></table></figure>
<p>即可。</p>
]]></content>
      <categories>
        <category>容器与虚拟机</category>
      </categories>
      <tags>
        <tag>VMware Workstation Pro</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 WSL 中 Apache2 的 Failed to enable APR_TCP_DEFER_ACCEP 错误</title>
    <url>/posts/13/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>WSL 安装 Apache2 后启动服务会报出以下错误：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Invalid argument: AH00076: Failed to enable APR_TCP_DEFER_ACCEP</span><br></pre></td></tr></table></figure>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>打开 Apache2 配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;etc&#x2F;apache2&#x2F;apache2.conf</span><br></pre></td></tr></table></figure>
<p>在文件的最底部添加以下内容：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">AcceptFilter</span> http none</span><br></pre></td></tr></table></figure>
<p>然后重启 Apache2 。</p>
]]></content>
      <categories>
        <category>网络服务</category>
      </categories>
      <tags>
        <tag>WSL</tag>
        <tag>Apache2</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 Yii2 在 WSL 中没有 chmod 权限的问题</title>
    <url>/posts/7/</url>
    <content><![CDATA[<p>执行下列命令即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">umount /mnt/x</span><br><span class="line">mount -t drvfs X: /mnt/x -o metadata</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Yii2</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>设置默认采用 root 用户登录 WSL</title>
    <url>/posts/11/</url>
    <content><![CDATA[<p>用管理员身份打开 PowerShell，执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;WSL 发行版代号&gt; config --default-user root</span><br></pre></td></tr></table></figure>
<p>目前可用的发行版代号不完全列表如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>发行版代号</th>
<th>发行版名称</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>ubuntu</code></td>
<td>Ubuntu</td>
</tr>
<tr>
<td><code>ubuntu1804</code></td>
<td>Ubuntu 18.04</td>
</tr>
<tr>
<td><code>opensuse-42</code></td>
<td>openSUSE Leap 42</td>
</tr>
<tr>
<td><code>sles-12</code></td>
<td>SUSE Linux Enterprise Server 12</td>
</tr>
<tr>
<td><code>debian</code></td>
<td>Debian GNU/Linux</td>
</tr>
<tr>
<td><code>kali</code></td>
<td>Kali Linux</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>远程桌面使用 MATLAB 报错 License Manager Error -103 的解决办法</title>
    <url>/posts/35/</url>
    <content><![CDATA[<h2 id="问描述"><a href="#问描述" class="headerlink" title="问描述"></a>问描述</h2><p>通过远程桌面访问 Windows 上安装好的 MATLAB 的时候，出现了 License Manager Error -103 的错误。</p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>这是由于 MATLAB 使用了 FLEXlm 进行 license 管理，而 FLEXlm 不支持从远程桌面访问。不过，对 license 文件稍加修改，就能够使用了。</p>
<p>修改 <em>安装目录/licenses</em> 目录下的许可证文件，用任何编辑工具打开 <em>.lic</em> 文件，然后在每一行的 <code>SIGN=xxxxxxxxxx</code> 前面，加入 <code>TS_OK</code> 这个参数（注意 OK 后面有一个空格）。</p>
<img src="/posts/35/20180726200007776.png" class="" title="修改示例">
<p>修改之后即可使用。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://blog.csdn.net/hezhongla0811/article/details/81226539">https://blog.csdn.net/hezhongla0811/article/details/81226539</a></li>
</ul>
]]></content>
      <categories>
        <category>其他软件问题</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>Mapping MySQL Data Types in Java</title>
    <url>/posts/38/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Data types of MySQL and Java programming language are not same, its need some mechanism for transferring data between an database using MySQL data types and a application using Java data types. We need to provide Java mappings for the common MySQL data types. We have to confirm that we have proper type information then only we can correctly store and retrieve parameters and recover results from MySQL statements.</p>
<p>There is no particular reason that the Java data type needs to be exactly isomorphic to the MySQL data type. For example, Java String don&#39;t precisely match any of the MySQL data <code>CHAR</code> type, but it gives enough type information to represent <code>CHAR</code>, <code>VARCHAR</code> or <code>LONGVARCHAR</code> successfully.</p>
<span id="more"></span>
<h2 id="对应关系表"><a href="#对应关系表" class="headerlink" title="对应关系表"></a>对应关系表</h2><p>The following table represent the default Java mapping for various common MySQL data types:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>MySQL Type</th>
<th>Java Type</th>
</tr>
</thead>
<tbody>
<tr>
<td>CHAR</td>
<td>String</td>
</tr>
<tr>
<td>VARCHAR</td>
<td>String</td>
</tr>
<tr>
<td>LONGVARCHAR</td>
<td>String</td>
</tr>
<tr>
<td>NUMERIC</td>
<td>java.math.BigDecimal</td>
</tr>
<tr>
<td>DECIMAL</td>
<td>java.math.BigDecimal</td>
</tr>
<tr>
<td>BIT</td>
<td>boolean</td>
</tr>
<tr>
<td>TINYINT</td>
<td>byte</td>
</tr>
<tr>
<td>SMALLINT</td>
<td>short</td>
</tr>
<tr>
<td>INTEGER</td>
<td>int</td>
</tr>
<tr>
<td>BIGINT</td>
<td>long</td>
</tr>
<tr>
<td>REAL</td>
<td>float</td>
</tr>
<tr>
<td>FLOAT</td>
<td>double</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>double</td>
</tr>
<tr>
<td>BINARY</td>
<td>byte []</td>
</tr>
<tr>
<td>VARBINARY</td>
<td>byte []</td>
</tr>
<tr>
<td>LONGVARBINARY</td>
<td>byte []</td>
</tr>
<tr>
<td>DATE</td>
<td>java.sql.Date</td>
</tr>
<tr>
<td>TIME</td>
<td>java.sql.Time</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>java.sql.Timestamp</td>
</tr>
</tbody>
</table>
</div>
<h2 id="具体解释"><a href="#具体解释" class="headerlink" title="具体解释"></a>具体解释</h2><h3 id="CHAR-VARCHAR-and-LONGVARCHAR"><a href="#CHAR-VARCHAR-and-LONGVARCHAR" class="headerlink" title="CHAR, VARCHAR and LONGVARCHAR"></a>CHAR, VARCHAR and LONGVARCHAR</h3><p>MySQL data types <code>CHAR</code>, <code>VARCHAR</code>, <code>LONGVARCHAR</code> are closely related. <code>CHAR</code> represents a small, fixed-length character string, <code>VARCHAR</code> represents a small, variable-length character string, and <code>LONGVARCHAR</code> represents a large, variable-length character string. There is no need for Java programmer to distinguish these three MySQL data types. These can be expressed identically in Java. These data types could be mapped in Java to either <code>String</code> or <code>char[]</code>. But <code>String</code> seemed more appropriate type for normal use. Java <code>String</code> class provide a method to convert a String into <code>char[]</code> and a constructor for converting a <code>char[]</code> into a <code>String</code>.</p>
<p>The method <code>ResultSet.getString()</code> allocates and returns a new <code>String</code>. It is suitable for retrieving data from <code>CHAR</code>, <code>VARCHAR</code> and <code>LONGVARCHAR</code> fields. This is suitable for retrieving normal data, but <code>LONGVARCHAR</code> MySQL type can be used to store multi-megabyte strings. So that Java programmers needs a way to retrieve the <code>LONGVARCHAR</code> value in chunks. To handle this situation, <code>ResultSet</code> interface have two methods for allowing programmers to retrieve a <code>LONGVARCHAR</code> value as a Java input stream from which they can subsequently read data in whatever size chunks they prefer. These methods are <code>getAsciiStream()</code> and <code>getCharacterStream()</code>, which deliver the data stored in a <code>LONGVARCHAR</code> column as a stream of ASCII or Unicode characters.</p>
<h3 id="NUMERIC-and-DECIMAL"><a href="#NUMERIC-and-DECIMAL" class="headerlink" title="NUMERIC and DECIMAL"></a>NUMERIC and DECIMAL</h3><p>The <code>NUMERIC</code> and <code>DECIMAL</code> MySQL data types are very similar. They both represent fixed point numbers where absolute precision is required. The most convenient Java mapping for these MySQL data type is <code>java.math.BigDecimal</code>. This Java type provides math operations to allow <code>BigDecimal</code> types to be added, subtracted, multiplied, and divided with other <code>BigDecimal</code> types, with <code>integer</code> types, and with floating point types.</p>
<p>We also allow access to these MySQL types as simple <code>String</code>s and <code>char[]</code>. Thus, the Java programmers can use the <code>getString()</code> to retrieve the <code>NUMERICAL</code> and <code>DECIMAL</code> results.</p>
<h3 id="BINARY-VARBINARY-and-LONGVARBINARY"><a href="#BINARY-VARBINARY-and-LONGVARBINARY" class="headerlink" title="BINARY, VARBINARY and LONGVARBINARY"></a>BINARY, VARBINARY and LONGVARBINARY</h3><p>These MySQL data types are closely related. <code>BINARY</code> represents a small, fixed-length binary value, <code>VARBINARY</code> represents a small, variable-length binary value and <code>LONGVARBINARY</code> represents a large, variable-length binary value. For Java programers there is no need to distinguish among these data types and they can all be expressed identically as byte arrays in Java. It is possible to read and write SQL statements correctly without knowing the exact <code>BINARY</code> data type. The <code>ResultSet.getBytes()</code> method is used for retrieving the <code>DECIMAL</code> and <code>NUMERICAL</code> values. Same as <code>LONGVARCHAR</code> type, <code>LONGVARBINARY</code> type can also be used to return multi-megabyte data values then the method <code>getBinaryStream()</code> is recommended.</p>
<h3 id="BIT"><a href="#BIT" class="headerlink" title="BIT"></a>BIT</h3><p>The MySQL type <code>BIT</code> represents a single bit value that can be &#39;zero&#39; or &#39;one&#39;. And this MySQL type can be mapped directly to the Java boolean type.</p>
<h3 id="TINYINT-SMALLINT-INTEGER-and-BIGINT"><a href="#TINYINT-SMALLINT-INTEGER-and-BIGINT" class="headerlink" title="TINYINT, SMALLINT, INTEGER and BIGINT"></a>TINYINT, SMALLINT, INTEGER and BIGINT</h3><p>The MySQL <code>TINYINT</code> type represents an 8-bit integer value between 0 and 255 that may be signed or unsigned. <code>SMALLINT</code> type represents a 16-bit signed integer value between -32768 and 32767. <code>INTEGER</code> type represents a 32-bit signed integer value between -2147483648 and 2147483647. <code>BIGINT</code> type represents an 64-bit signed integer value between -9223372036854775808 and 9223372036854775807. These MySQL <code>TINYINT</code>, <code>SMALLINT</code>, <code>INTEGER</code>, and <code>BIGINT</code> types can be mapped to Java&#39;s <code>byte</code>, <code>short</code>, <code>int</code> and <code>long</code> data types respectively.</p>
<h3 id="REAL-FLOAT-and-DOUBLE"><a href="#REAL-FLOAT-and-DOUBLE" class="headerlink" title="REAL, FLOAT and DOUBLE"></a>REAL, FLOAT and DOUBLE</h3><p>The MySQL <code>REAL</code> represents a &quot;single precision&quot; floating point number that supports seven digits of mantissa and the <code>FLOAT</code> and <code>DOUBLE</code> type represents a &quot;double precision&quot; floating point number that supports 15 digits of mantissa. The recommended Java mapping for <code>REAL</code> type to Java <code>float</code> and <code>FLOAT</code>, <code>DOUBLE</code> type to Java <code>double</code>.</p>
<h3 id="DATE-TIME-and-TIMESTAMP"><a href="#DATE-TIME-and-TIMESTAMP" class="headerlink" title="DATE, TIME and TIMESTAMP"></a>DATE, TIME and TIMESTAMP</h3><p>These three MySQL types are related to time. The <code>DATE</code> type represents a date consisting of day, month, and year, the <code>TIME</code> type represents a time consisting of hours, minutes, and seconds and the <code>TIMESTAMP</code> type represents <code>DAT</code>E plus <code>TIME</code> plus a nanosecond field. The standard Java class <code>java.util.Date</code> that provides date and time information but does not match any of these three MySQL date/time types exactly, because it has <code>DATE</code> and <code>TIME</code> information but no nanoseconds.</p>
<p>That&#39;s why we define three subclasses of <code>java.util.Date</code>. These are:</p>
<p><code>java.sql.Date</code> for SQL <code>DATE</code> information.<br><code>java.sql.Timefor</code> SQL <code>TIME</code> information.<br><code>java.sql.Timestamp</code> for SQL <code>TIMESTAMP</code> information.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://www.roseindia.net/jdbc/jdbc-mysql/mapping-mysql-data-types-in-java.shtml">https://www.roseindia.net/jdbc/jdbc-mysql/mapping-mysql-data-types-in-java.shtml</a></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>MySQL/MariaDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Matplotlib 面向对象编程简介</title>
    <url>/posts/44/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 Matplotlib 中一般有三种绘图方式： <code>matplotlib.pyplot</code> 、 <code>pylab</code> 和面向对象编程。在绘图时推荐使用面向对象编程的方法，因为它可以更好地控制和自定义绘图。</p>
<p>官方教程中说：</p>
<div class="note info">
            <p>The pyplot API is generally less-flexible than the object-oriented API. Most of the function calls you see here can also be called as methods from an Axes object. We recommend browsing the tutorials and examples to see how this works.</p>
          </div>
<p>下图展示了大部分绘图元素：</p>
<img src="/posts/44/anatomy-of-a-figure.webp" class="" title="Anatomy of a Figure">
<span id="more"></span>
<h2 id="三种绘图方式的联系与区别"><a href="#三种绘图方式的联系与区别" class="headerlink" title="三种绘图方式的联系与区别"></a>三种绘图方式的联系与区别</h2><p><code>matplotlib</code> 是整个包， <code>matplotlib.pyplot</code> 是 Matplotlib 中的一个模块， <code>pylab</code> 是一个与 Matplotlib 一起安装的模块。</p>
<h3 id="matplotlib-pyplot"><a href="#matplotlib-pyplot" class="headerlink" title="matplotlib.pyplot"></a>matplotlib.pyplot</h3><p><code>matplotlib.pyplot</code> 为底层面向对象的绘图库提供状态机接口。状态机隐式地自动创建图像和坐标轴，以实现所需的功能，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">2</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(x, x, label=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line">plt.plot(x, x ** <span class="number">2</span>, label=<span class="string">&#x27;quadratic&#x27;</span>)</span><br><span class="line">plt.plot(x, x ** <span class="number">3</span>, label=<span class="string">&#x27;cubic&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">&#x27;x label&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y label&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&quot;Simple Plot&quot;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/posts/44/myplot-1.png" class="">
<p>第一次调用 <code>plt.plot</code> 将自动创建必要的图像和坐标轴以实现所需的绘图。随后对 <code>plt.plot</code> 的调用会重新使用当前坐标轴。设置标题，图例和轴标签也会自动针对当前坐标轴进行设置。<code>matplotlib.pyplot</code> 接口简单易用，交互使用时方便，可以根据命令实时作图，但底层定制能力不足。</p>
<div class="note warning">
            <p>本文中的“坐标轴”特指 Matplotlib 中的 <code>Axes</code> 对象（后文会提到），并不是严格数学意义上的坐标轴。</p>
          </div>
<h3 id="pylab"><a href="#pylab" class="headerlink" title="pylab"></a>pylab</h3><p><code>pylab</code> 是一个便利模块，相当于在单个名称空间中批量导入 <code>matplotlib.pyplot</code> （用于绘图）和 <code>numpy</code> （用于数学运算和使用数组）。不过由于它会导致命名空间污染，强烈建议不要使用它。</p>
<p>示例代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pylab <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">x = linspace(<span class="number">0</span>, <span class="number">2</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">plot(x, x, label=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line">plot(x, x ** <span class="number">2</span>, label=<span class="string">&#x27;quadratic&#x27;</span>)</span><br><span class="line">plot(x, x ** <span class="number">3</span>, label=<span class="string">&#x27;cubic&#x27;</span>)</span><br><span class="line"></span><br><span class="line">xlabel(<span class="string">&#x27;x label&#x27;</span>)</span><br><span class="line">ylabel(<span class="string">&#x27;y label&#x27;</span>)</span><br><span class="line">title(<span class="string">&quot;Simple Plot&quot;</span>)</span><br><span class="line">legend()</span><br><span class="line"></span><br><span class="line">show()</span><br></pre></td></tr></table></figure>
<h3 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h3><p>面向对象编程的绘图方式，接近 Matplotlib 的基础和底层，难度稍大，但定制能力强，而且是 Matplotlib 的精髓。</p>
<h2 id="Matplotlib-中的面向对象编程"><a href="#Matplotlib-中的面向对象编程" class="headerlink" title="Matplotlib 中的面向对象编程"></a>Matplotlib 中的面向对象编程</h2><p>Matplotlib 中的对象主要有三种， <code>FigureCanvas</code> （画布）， <code>Figure</code> （图像）和 <code>Axes</code> （坐标轴）。而 <code>FigureCanvas</code> 涉及到底层操作，暂时不必深究。</p>
<p>使用 Matplotlib 绘图需要搞清楚图像和坐标轴两个对象。只有真正理解这两个概念，才能获得对整个绘图过程的控制权。</p>
<h3 id="Figure-对象与-Axes-对象"><a href="#Figure-对象与-Axes-对象" class="headerlink" title="Figure 对象与 Axes 对象"></a>Figure 对象与 Axes 对象</h3><p>下列代码使用 <code>plt.figure</code> 创建一个空的 <code>Figure</code> 对象，并通过 <code>plt.show</code> 显示出来：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/posts/44/myplot-2.png" class="">
<p>有了图像，接下来就在图像上绘图。我们首先需要创建一个坐标轴，可以调用 <code>Figure</code> 实例的 <code>add_axes</code> 方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_axes([<span class="number">0.1</span>, <span class="number">0.1</span>, <span class="number">0.8</span>, <span class="number">0.8</span>])  <span class="comment"># [左边距，下边距，坐标轴宽度，坐标轴高度] 范围 (0, 1)</span></span><br><span class="line">fig.show()</span><br></pre></td></tr></table></figure>
<p><code>[0.1, 0.1, 0.8, 0.8]</code> 表示的是在图像中，坐标轴距离画布左边 0.1 倍的位置，距离画布下边 0.1 倍的位置。确定了这两个位置后，坐标轴的整体宽度和高度占 0.8 倍的大小。得到如下结果：</p>
<img src="/posts/44/myplot-3.png" class="">
<h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><p>如果你之前就接触过一些绘图的命令，你会发现：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.plot([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>直接使用这两个命令就能绘图，并没有手动创建图像和坐标轴。得到如下图：</p>
<img src="/posts/44/myplot-4.png" class="">
<p>这是因为 Matplotlib 会在最近使用过的图像和坐标轴上进行绘图，如果没有的话，会自动创建一个图像或坐标轴。</p>
<p>但是，显式地创建图像和坐标轴能让我们对绘图过程有完全的控制权（比如可以指定在什么地方绘图），而且绘图过程的逻辑性更强。接下来我们通过绘制一张“图中图”来理解这个过程：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot  <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax1 = fig.add_axes([<span class="number">0.1</span>, <span class="number">0.1</span>, <span class="number">0.8</span>, <span class="number">0.8</span>])  <span class="comment"># 第一个坐标轴的范围</span></span><br><span class="line">ax2 = fig.add_axes([<span class="number">0.2</span>, <span class="number">0.5</span>, <span class="number">0.4</span>, <span class="number">0.3</span>])  <span class="comment"># 第二个坐标轴的范围</span></span><br><span class="line">ax1.plot(x, y, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">ax2.plot(x, y, <span class="string">&#x27;g&#x27;</span>)</span><br><span class="line"></span><br><span class="line">fig.show()</span><br></pre></td></tr></table></figure>
<p>我们得到了如下图像：</p>
<img src="/posts/44/myplot-5.png" class="">
<p>这里我们创建了两个坐标轴 <code>ax1</code> 和 <code>ax2</code> ，分别对两个坐标轴指定范围并作图。</p>
<h3 id="AxesSubplot-对象"><a href="#AxesSubplot-对象" class="headerlink" title="AxesSubplot 对象"></a>AxesSubplot 对象</h3><p>AxesSubplot 对象即子图。子图是自带坐标轴的。下列代码会在图像上创建两个子图（一行两列）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">1</span>, <span class="number">100</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">fig = plt.figure()</span><br><span class="line"></span><br><span class="line">ax1 = fig.add_subplot(<span class="number">121</span>)</span><br><span class="line">ax1.plot(x, x, label=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line">ax1.grid(color=<span class="string">&#x27;g&#x27;</span>, linestyle=<span class="string">&#x27;--&#x27;</span>)  <span class="comment"># 设置网格</span></span><br><span class="line">ax1.legend()                         <span class="comment"># 设置图例</span></span><br><span class="line"></span><br><span class="line">ax2 = fig.add_subplot(<span class="number">122</span>)</span><br><span class="line">ax2.plot(x, x ** <span class="number">2</span>, label=<span class="string">&#x27;quadratic&#x27;</span>)</span><br><span class="line"></span><br><span class="line">fig.show()</span><br></pre></td></tr></table></figure>
<p>此处可以与使用 <code>matplotlib.pyplot</code> 接口绘图的方式简单对比一下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">1</span>, <span class="number">100</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">plt.plot(x, x, label=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line">plt.grid(color=<span class="string">&#x27;g&#x27;</span>, linestyle=<span class="string">&#x27;--&#x27;</span>)  <span class="comment"># 设置网格</span></span><br><span class="line">plt.legend()                         <span class="comment"># 设置图例</span></span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">plt.plot(x, x ** <span class="number">2</span>, label=<span class="string">&#x27;quadratic&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>上面两种方式都能得到同样的结果：</p>
<img src="/posts/44/myplot-6.png" class="">
<div class="note warning">
            <p>这里 <code>plt.subplot</code> 和 <code>fig.add_subplot</code> 稍有差别。若参数传入 <code>121</code> 和 <code>335</code> ，显然不匹配，若用 <code>plt.subplot</code> 则只会显示后者，若用 <code>fig.add_subplot</code> 则两者都会显示出来，但是会重叠，且靠后绘制的显示在上方。</p><p>使用 <code>plt.subplot</code> 可得到：</p><p><img src="/posts/44/myplot-7.png" class=""></p><p>使用 <code>fig.add_subplot</code> 可得到：</p><p><img src="/posts/44/myplot-8.png" class=""></p>
          </div>
<h3 id="设置图像尺寸"><a href="#设置图像尺寸" class="headerlink" title="设置图像尺寸"></a>设置图像尺寸</h3><p>在创建 <code>Figure</code> 对象的时候，我们可以使用 <code>figsize</code> 和 <code>dpi</code> 控制图像的尺寸。比如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">16</span>,<span class="number">8</span>), dpi=<span class="number">100</span>)</span><br></pre></td></tr></table></figure>
<p><code>figsize</code> 表示图像长宽大小，单位为英寸。 <code>dpi</code> 表示每英寸的像素值。因此上面的命令创建了一张 1600*800 像素的图像。</p>
<h3 id="保存图像"><a href="#保存图像" class="headerlink" title="保存图像"></a>保存图像</h3><p>从上面输出的结果来看， <code>plt.show</code> 仅仅是将图像显示了出来。如果要保存图像，还需要通过 <code>savefig</code> 保存。没有显式指定图像和坐标轴，直接使用 <code>plt.savefig</code> 保存也可以，若显式指定了图像可以用 <code>Figure</code> 实例的 <code>savefig</code> 方法。 Matplotlib 可以将图像保存为多种格式的高质量图片，包括 PNG ， JPG ， EPS ， SVG ， PGF 和 PDF 等，只要写好后缀名即可。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig.savefig(<span class="string">&#x27;result.png&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="其他差别"><a href="#其他差别" class="headerlink" title="其他差别"></a>其他差别</h3><p>下表展示了一些常用方法的对比：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>面向对象编程</th>
<th><code>matplotlib.pyplot</code> 接口</th>
</tr>
</thead>
<tbody>
<tr>
<td>ax.set_title</td>
<td>plt.title</td>
</tr>
<tr>
<td>ax.set_xlabel</td>
<td>plt.xlabel</td>
</tr>
<tr>
<td>ax.set_ylabel</td>
<td>plt.ylabel</td>
</tr>
<tr>
<td>ax.set_xlim</td>
<td>plt.xlim</td>
</tr>
<tr>
<td>ax.set_ylim</td>
<td>plt.ylim</td>
</tr>
</tbody>
</table>
</div>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>建议按照面向对象编程的方式去绘图：先创建图像，再创建坐标轴，最后在坐标轴上绘图。这种编码方式会让绘图逻辑更加清晰，能够随心所欲地修改图片的每个地方。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://segmentfault.com/a/1190000020450334?utm_source=tag-newest">https://segmentfault.com/a/1190000020450334?utm_source=tag-newest</a></li>
<li><a href="https://www.cnblogs.com/linblogs/archive/2018/09/12/9636782.html">https://www.cnblogs.com/linblogs/archive/2018/09/12/9636782.html</a></li>
<li><a href="https://matplotlib.org/tutorials/introductory/usage.html">https://matplotlib.org/tutorials/introductory/usage.html</a></li>
<li><a href="https://matplotlib.org/tutorials/introductory/pyplot.html">https://matplotlib.org/tutorials/introductory/pyplot.html</a></li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Matplotlib 在一张图里画多条曲线</title>
    <url>/posts/43/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Python 中 Matplotlib 的作图功能很强大。本文教你将多条数据曲线画到一起，并且用不同颜色标志每条数据曲线。</p>
<div class="note info">
            <p>如果你对 Matplotlib 的使用不太熟悉，可以参考<a href="https://matplotlib.org/tutorials/introductory/pyplot.html">此教程</a>。</p>
          </div>
<h2 id="将所有曲线画进一个子图"><a href="#将所有曲线画进一个子图" class="headerlink" title="将所有曲线画进一个子图"></a>将所有曲线画进一个子图</h2><p>利用 Matplotlib 的默认方式来执行此操作。</p>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">plt.plot(x, x)</span><br><span class="line">plt.plot(x, <span class="number">2</span> * x)</span><br><span class="line">plt.plot(x, <span class="number">3</span> * x)</span><br><span class="line">plt.plot(x, <span class="number">4</span> * x)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<img src="/posts/43/myplot-1.png" class="">
<p>而且，正如你可能已经知道的那样，你可以轻松添加图例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">plt.plot(x, x)</span><br><span class="line">plt.plot(x, <span class="number">2</span> * x)</span><br><span class="line">plt.plot(x, <span class="number">3</span> * x)</span><br><span class="line">plt.plot(x, <span class="number">4</span> * x)</span><br><span class="line">plt.legend([<span class="string">&#x27;$y = x$&#x27;</span>, <span class="string">&#x27;$y = 2x$&#x27;</span>, <span class="string">&#x27;$y = 3x$&#x27;</span>, <span class="string">&#x27;$y = 4x$&#x27;</span>], loc=<span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/posts/43/myplot-2.png" class="">
<p>你还可以控制循环的颜色：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">plt.gca().set_prop_cycle(color=[<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>])</span><br><span class="line">plt.plot(x, x)</span><br><span class="line">plt.plot(x, <span class="number">2</span> * x)</span><br><span class="line">plt.plot(x, <span class="number">3</span> * x)</span><br><span class="line">plt.plot(x, <span class="number">4</span> * x)</span><br><span class="line">plt.legend([<span class="string">&#x27;$y = x$&#x27;</span>, <span class="string">&#x27;$y = 2x$&#x27;</span>, <span class="string">&#x27;$y = 3x$&#x27;</span>, <span class="string">&#x27;$y = 4x$&#x27;</span>], loc=<span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/posts/43/myplot-3.png" class="">
<p>但是，如果你想要在一个图上绘制很多曲线（&gt;5），请做到：</p>
<ol>
<li>将它们放在不同的图上（考虑在一个图上使用一些子图），或</li>
<li>使用颜色以外的其他东西（即标记样式或线条粗细）来区分它们。</li>
</ol>
<p>否则，你将陷入一个非常混乱的境地！许多人在不同程度上都是色盲，区分众多微妙不同的颜色对于更多的人来说比你意识到的要困难。如果你真的想在一张图上放 20 条线，并且有 20 种相对不同的颜色，可以用如下方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">num_plots = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Have a look at the colormaps here and decide which one you&#x27;d like:</span></span><br><span class="line"><span class="comment"># https://matplotlib.org/3.1.3/gallery/color/colormap_reference.html#sphx-glr-gallery-color-colormap-reference-py</span></span><br><span class="line">plt.gca().set_prop_cycle(</span><br><span class="line">    plt.cycler(<span class="string">&#x27;color&#x27;</span>, plt.cm.get_cmap(<span class="string">&#x27;gist_ncar&#x27;</span>)(np.linspace(<span class="number">0</span>, <span class="number">1</span>, num_plots))))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot several different functions...</span></span><br><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, num_plots + <span class="number">1</span>):</span><br><span class="line">    plt.plot(x, i * x + <span class="number">5</span> * i, label=<span class="string">f&#x27;$y = <span class="subst">&#123;i&#125;</span>x + <span class="subst">&#123;<span class="number">5</span> * i&#125;</span>$&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># I&#x27;m basically just demonstrating several different legend options here...</span></span><br><span class="line">plt.legend(ncol=<span class="number">4</span>, loc=<span class="string">&#x27;upper center&#x27;</span>,</span><br><span class="line">           bbox_to_anchor=[<span class="number">0.5</span>, <span class="number">1.1</span>],</span><br><span class="line">           columnspacing=<span class="number">1.0</span>, labelspacing=<span class="number">0.0</span>,</span><br><span class="line">           handletextpad=<span class="number">0.0</span>, handlelength=<span class="number">1.5</span>,</span><br><span class="line">           fancybox=<span class="literal">True</span>, shadow=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/posts/43/myplot-4.png" class="">
<p>如果你事先不知道要绘制的线条数量，可以在绘制它们之后从图形中获取曲线数量并更改颜色：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    plt.plot(np.array([<span class="number">1</span>, <span class="number">5</span>]) * i, label=<span class="string">f&#x27;$y = <span class="subst">&#123;<span class="number">4</span> * i&#125;</span>x + <span class="subst">&#123;i&#125;</span>$&#x27;</span>)</span><br><span class="line"></span><br><span class="line">colormap = plt.cm.get_cmap(<span class="string">&#x27;gist_ncar&#x27;</span>)</span><br><span class="line">colors = [colormap(i) <span class="keyword">for</span> i <span class="keyword">in</span> np.linspace(<span class="number">0</span>, <span class="number">1</span>, <span class="built_in">len</span>(plt.gca().lines))]</span><br><span class="line"><span class="keyword">for</span> i, j <span class="keyword">in</span> <span class="built_in">enumerate</span>(plt.gca().lines):</span><br><span class="line">    j.set_color(colors[i])</span><br><span class="line"></span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/posts/43/myplot-5.png" class="">
<h2 id="将曲线画进不同的子图"><a href="#将曲线画进不同的子图" class="headerlink" title="将曲线画进不同的子图"></a>将曲线画进不同的子图</h2><p>Matplotlib 中的每个子图，即 <code>axes</code> ，都有自己独立的颜色循环，即 <code>prop_cycle</code> ，如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> ax <span class="keyword">in</span> axes.flatten():</span><br><span class="line">    ax.plot((<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/posts/43/myplot-6.png" class="">
<p>那么该如何让所有子图中的曲线都拥有不同的颜色呢？</p>
<p>如果这些字图是由一个循环自动产生的（通常是这样），我们必须使用另一个循环变量去自动覆盖默认颜色设置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> ax, short_color_name <span class="keyword">in</span> <span class="built_in">zip</span>(axes.flatten(), <span class="string">&#x27;brgkyc&#x27;</span>):</span><br><span class="line">    ax.plot((<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">1</span>), short_color_name)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/posts/43/myplot-7.png" class="">
<p>另一种方法是创建一个属性循环对象：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> cycler <span class="keyword">import</span> cycler</span><br><span class="line"></span><br><span class="line">fig, axes = plt.subplots(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">my_cycler = cycler(<span class="string">&#x27;color&#x27;</span>, [<span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;r&#x27;</span>]) * cycler(<span class="string">&#x27;linewidth&#x27;</span>, [<span class="number">1.</span>, <span class="number">1.5</span>, <span class="number">2.</span>])</span><br><span class="line">actual_cycler = my_cycler()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ax <span class="keyword">in</span> axes.flat:</span><br><span class="line">    ax.plot((<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">1</span>), **<span class="built_in">next</span>(actual_cycler))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="/posts/43/myplot-8.png" class="">
<div class="note warning">
            <p><code>my_cycler</code> 的类型为 <code>cycler.Cycler</code> 。<br><code>actual_cycler</code> 的类型为 <code>itertools.cycle</code> 。</p>
          </div>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/4805048/how-to-get-different-colored-lines-for-different-plots-in-a-single-figure">https://stackoverflow.com/questions/4805048/how-to-get-different-colored-lines-for-different-plots-in-a-single-figure</a></li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 pandas 和 Matplotlib 绘制 CDF 图</title>
    <url>/posts/41/</url>
    <content><![CDATA[<h2 id="核心方法"><a href="#核心方法" class="headerlink" title="核心方法"></a>核心方法</h2><p><code>pandas.Series.hist</code> 和 <code>matplotlib.pyplot.hist</code> 可以帮助我们画出想要的 CDF 图。</p>
<img src="/posts/41/cdf.png" class="">
<span id="more"></span>
<h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><h3 id="bins"><a href="#bins" class="headerlink" title="bins"></a>bins</h3><ul>
<li>int or sequence, default 10.</li>
<li>Number of histogram bins to be used. If an integer is given, bins + 1 bin edges are calculated and returned. If bins is a sequence, gives bin edges, including left edge of first bin and right edge of last bin. In this case, bins is returned unmodified.</li>
</ul>
<h3 id="density"><a href="#density" class="headerlink" title="density"></a>density</h3><ul>
<li>bool, default None.</li>
<li>If True, the first element of the return tuple will be the counts normalized to form a probability density, i.e., the area (or integral) under the histogram will sum to 1. This is achieved by dividing the count by the number of observations times the bin width and not dividing by the total number of observations. If stacked is also True, the sum of the histograms is normalized to 1.</li>
</ul>
<h3 id="cumulative"><a href="#cumulative" class="headerlink" title="cumulative"></a>cumulative</h3><ul>
<li>bool, default False.</li>
<li>If True, then a histogram is computed where each bin gives the counts in that bin plus all bins for smaller values. The last bin gives the total number of datapoints. If normed or density is also True then the histogram is normalized such that the last bin equals 1. If cumulative evaluates to less than 0 (e.g., -1), the direction of accumulation is reversed. In this case, if normed and/or density is also True, then the histogram is normalized such that the first bin equals 1.</li>
</ul>
<h3 id="histtype"><a href="#histtype" class="headerlink" title="histtype"></a>histtype</h3><ul>
<li>{&#39;bar&#39;, &#39;barstacked&#39;, &#39;step&#39;, &#39;stepfilled&#39;}, default &#39;bar&#39;.</li>
<li>The type of histogram to draw:<ul>
<li>&#39;bar&#39; is a traditional bar-type histogram. If multiple data are given the bars are arranged side by side.</li>
<li>&#39;barstacked&#39; is a bar-type histogram where multiple data are stacked on top of each other.</li>
<li>&#39;step&#39; generates a lineplot that is by default unfilled.</li>
<li>&#39;stepfilled&#39; generates a lineplot that is by default filled.</li>
</ul>
</li>
</ul>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> matplotlib.lines <span class="keyword">import</span> Line2D</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;cdf.csv&#x27;</span>, header=<span class="number">0</span>)</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_subplot()</span><br><span class="line"></span><br><span class="line">series: pd.Series</span><br><span class="line"><span class="keyword">for</span> label, series <span class="keyword">in</span> df.iteritems():</span><br><span class="line">    <span class="comment"># 用于隐藏最右边的竖线</span></span><br><span class="line">    <span class="comment"># 将 2 修改为横轴范围外的一处即可（但不可为 inf ）</span></span><br><span class="line">    bins = <span class="built_in">sorted</span>(series.drop_duplicates()) + [<span class="number">2</span>]</span><br><span class="line">    series.hist(label=label, cumulative=<span class="literal">True</span>, histtype=<span class="string">&#x27;step&#x27;</span>,</span><br><span class="line">                density=<span class="number">1</span>, bins=bins, linewidth=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">ax.set_title(<span class="string">&#x27;Empirical CDF&#x27;</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;Value&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;Density&#x27;</span>)</span><br><span class="line">ax.set_xlim((<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">ax.set_ylim((<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">handles, labels = ax.get_legend_handles_labels()</span><br><span class="line">new_handles = [Line2D([], [], c=h.get_edgecolor()) <span class="keyword">for</span> h <span class="keyword">in</span> handles]</span><br><span class="line">ax.legend(handles=new_handles, labels=labels)</span><br><span class="line"></span><br><span class="line">fig.show()</span><br></pre></td></tr></table></figure>
<h2 id="附：测试数据"><a href="#附：测试数据" class="headerlink" title="附：测试数据"></a>附：测试数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Series A,Series B</span><br><span class="line">0.55,0.6</span><br><span class="line">0.59,0.632</span><br><span class="line">0.717,0.719</span><br><span class="line">0.661,0.725</span><br><span class="line">0.479,0.726</span><br><span class="line">0.741,0.742</span><br><span class="line">0.718,0.742</span><br><span class="line">0.745,0.748</span><br><span class="line">0.61,0.75</span><br><span class="line">0.739,0.764</span><br><span class="line">0.532,0.78</span><br><span class="line">0.8,0.808</span><br><span class="line">0.618,0.811</span><br><span class="line">0.603,0.819</span><br><span class="line">0.792,0.832</span><br><span class="line">0.703,0.834</span><br><span class="line">0.697,0.834</span><br><span class="line">0.764,0.859</span><br><span class="line">0.709,0.862</span><br><span class="line">0.764,0.875</span><br><span class="line">0.8,0.895</span><br><span class="line">0.897,0.897</span><br><span class="line">0.869,0.898</span><br><span class="line">0.902,0.907</span><br><span class="line">0.898,0.908</span><br><span class="line">0.86,0.911</span><br><span class="line">0.888,0.911</span><br><span class="line">0.904,0.927</span><br><span class="line">0.929,0.932</span><br><span class="line">0.932,0.932</span><br><span class="line">0.73,0.933</span><br><span class="line">0.922,0.947</span><br><span class="line">0.944,0.95</span><br><span class="line">0.955,0.95</span><br><span class="line">0.97,1</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Matplotlib</tag>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Matplotlib 中显示中文</title>
    <url>/posts/40/</url>
    <content><![CDATA[<p>在 Python 中使用 Matplotlib 显示中文时，如果遇到字体显示不全等问题，可以添加如下代码片段解决。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用来正常显示中文汉字</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用来正常显示负号</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br></pre></td></tr></table></figure>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://blog.csdn.net/u010472607/article/details/82789887">https://blog.csdn.net/u010472607/article/details/82789887</a></li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title>设置 PowerShell 脚本执行策略</title>
    <url>/posts/42/</url>
    <content><![CDATA[<p>由于安全权限限制，在 PowerShell 中执行第三方脚本会失败。此时需要手动设置脚本的执行策略。</p>
<h2 id="执行策略"><a href="#执行策略" class="headerlink" title="执行策略"></a>执行策略</h2><p>脚本的执行策略有如下几种：</p>
<h3 id="AllSigned"><a href="#AllSigned" class="headerlink" title="AllSigned"></a>AllSigned</h3><ul>
<li>Scripts can run.</li>
<li>Requires that all scripts and configuration files be signed by a trusted publisher, including scripts that you write on the local computer.</li>
<li>Prompts you before running scripts from publishers that you haven&#39;t yet classified as trusted or untrusted.</li>
<li>Risks running signed, but malicious, scripts.</li>
</ul>
<h3 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a>Bypass</h3><ul>
<li>Nothing is blocked and there are no warnings or prompts.</li>
<li>This execution policy is designed for configurations in which a PowerShell script is built in to a larger application or for configurations in which PowerShell is the foundation for a program that has its own security model.</li>
</ul>
<span id="more"></span>
<h3 id="Default"><a href="#Default" class="headerlink" title="Default"></a>Default</h3><ul>
<li>Sets the default execution policy.</li>
<li>Restricted for Windows clients.</li>
<li>RemoteSigned for Windows servers.</li>
</ul>
<h3 id="RemoteSigned"><a href="#RemoteSigned" class="headerlink" title="RemoteSigned"></a>RemoteSigned</h3><ul>
<li>The default execution policy for Windows server computers.</li>
<li>Scripts can run.</li>
<li>Requires a digital signature from a trusted publisher on scripts and configuration files that are downloaded from the internet which includes email and instant messaging programs.</li>
<li>Doesn&#39;t require digital signatures on scripts that are written on the local computer and not downloaded from the internet.</li>
<li>Runs scripts that are downloaded from the internet and not signed, if the scripts are unblocked, such as by using the Unblock-File cmdlet.</li>
<li>Risks running unsigned scripts from sources other than the internet and signed, but malicious, scripts.</li>
</ul>
<h3 id="Restricted"><a href="#Restricted" class="headerlink" title="Restricted"></a>Restricted</h3><ul>
<li>The default execution policy for Windows client computers.</li>
<li>Permits individual commands, but does not allow scripts.</li>
<li>Prevents running of all script files, including formatting and configuration files (.ps1xml), module script files (.psm1), and PowerShell profiles (.ps1).</li>
</ul>
<h3 id="Undefined"><a href="#Undefined" class="headerlink" title="Undefined"></a>Undefined</h3><ul>
<li>There is no execution policy set in the current scope.</li>
<li>If the execution policy in all scopes is Undefined, the effective execution policy is Restricted, which is the default execution policy.</li>
</ul>
<h3 id="Unrestricted"><a href="#Unrestricted" class="headerlink" title="Unrestricted"></a>Unrestricted</h3><ul>
<li>The default execution policy for non-Windows computers and cannot be changed.</li>
<li>Unsigned scripts can run. There is a risk of running malicious scripts.</li>
<li>Warns the user before running scripts and configuration files that are not from the local intranet zone.</li>
</ul>
<h2 id="更改执行策略"><a href="#更改执行策略" class="headerlink" title="更改执行策略"></a>更改执行策略</h2><p>一般来说，使用如下命令后能够正常使用第三方脚本：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> <span class="literal">-ExecutionPolicy</span> RemoteSigned <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7">https://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>PowerShell</tag>
      </tags>
  </entry>
  <entry>
    <title>Add Local JAR files to a Maven Project</title>
    <url>/posts/45/</url>
    <content><![CDATA[<h2 id="Problems-of-popular-approaches"><a href="#Problems-of-popular-approaches" class="headerlink" title="Problems of popular approaches"></a>Problems of popular approaches</h2><p>Most of the answers you&#39;ll find around the internet will suggest you to either install the dependency to your local repository or specify a &quot;system&quot; scope in the <code>pom</code> and distribute the dependency with the source of your project. But both of these solutions are actually flawed.</p>
<h3 id="Why-you-shouldn-39-t-apply-the-quot-Install-to-Local-Repo-quot-approach"><a href="#Why-you-shouldn-39-t-apply-the-quot-Install-to-Local-Repo-quot-approach" class="headerlink" title="Why you shouldn&#39;t apply the &quot;Install to Local Repo&quot; approach"></a>Why you shouldn&#39;t apply the &quot;Install to Local Repo&quot; approach</h3><p>When you install a dependency to your local repository it remains there. Your distribution artifact will do fine as long as it has access to this repository. The problem is in most cases this repository will reside on your local machine, so there&#39;ll be no way to resolve this dependency on any other machine. Clearly making your artifact depend on a specific machine is not a way to handle things. Otherwise this dependency will have to be locally installed on every machine working with that project which is not any better.</p>
<h3 id="Why-you-shouldn-39-t-apply-the-quot-System-Scope-quot-approach"><a href="#Why-you-shouldn-39-t-apply-the-quot-System-Scope-quot-approach" class="headerlink" title="Why you shouldn&#39;t apply the &quot;System Scope&quot; approach"></a>Why you shouldn&#39;t apply the &quot;System Scope&quot; approach</h3><p>The jars you depend on with the &quot;System Scope&quot; approach neither get installed to any repository or attached to your target packages. That&#39;s why your distribution package won&#39;t have a way to resolve that dependency when used. That I believe was the reason why the use of system scope even got deprecated. Anyway you don&#39;t want to rely on a deprecated feature.</p>
<span id="more"></span>
<h2 id="The-static-in-project-repository-solution"><a href="#The-static-in-project-repository-solution" class="headerlink" title="The static in-project repository solution"></a>The static in-project repository solution</h2><p>After putting this in your <code>pom</code>:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">checksumPolicy</span>&gt;</span>ignore<span class="tag">&lt;/<span class="name">checksumPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>file://$&#123;project.basedir&#125;/repo<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>for each artifact with a group id of form x.y.z Maven will include the following location inside your project dir in its search for artifacts:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">repo&#x2F;</span><br><span class="line">| - x&#x2F;</span><br><span class="line">|   | - y&#x2F;</span><br><span class="line">|   |   | - z&#x2F;</span><br><span class="line">|   |   |   | - $&#123;artifactId&#125;&#x2F;</span><br><span class="line">|   |   |   |   | - $&#123;version&#125;&#x2F;</span><br><span class="line">|   |   |   |   |   | - $&#123;artifactId&#125;-$&#123;version&#125;.jar</span><br></pre></td></tr></table></figure>
<p>To elaborate more on this you can read <a href="http://blog.dub.podval.org/2010/01/maven-in-project-repository.html">this blog post</a>.</p>
<h2 id="Use-Maven-to-install-to-project-repo"><a href="#Use-Maven-to-install-to-project-repo" class="headerlink" title="Use Maven to install to project repo"></a>Use Maven to install to project repo</h2><p>Instead of creating this structure by hand I recommend to use a Maven plugin to install your jars as artifacts. So, to install an artifact to an in-project repository under <code>repo</code> folder execute:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn install:install-file -DlocalRepositoryPath&#x3D;repo -DcreateChecksum&#x3D;true -Dpackaging&#x3D;jar -Dfile&#x3D;[your-jar] -DgroupId&#x3D;[...] -DartifactId&#x3D;[...] -Dversion&#x3D;[...]</span><br></pre></td></tr></table></figure>
<p>If you&#39;ll choose this approach you&#39;ll be able to simplify the repository declaration in <code>pom</code> to:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>file://$&#123;project.basedir&#125;/repo<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/364114/can-i-add-jars-to-maven-2-build-classpath-without-installing-them">https://stackoverflow.com/questions/364114/can-i-add-jars-to-maven-2-build-classpath-without-installing-them</a></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Create an Executable JAR with Maven</title>
    <url>/posts/46/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>In this quick article we&#39;ll focus on packaging a Maven project into an executable Jar file.</p>
<p>Usually, when creating a jar file, we want to execute it easily, without using the IDE; to that end, we&#39;ll discuss the configuration and pros/cons of using each of these approaches for creating the executable.</p>
<span id="more"></span>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>In order to create an executable jar, we don&#39;t need any additional dependencies. We just need to create Maven Java project, and have at least one class with the <code>main(…)</code> method.</p>
<p>In our example, we created Java class named <code>ExecutableMavenJar</code>.</p>
<p>We also need to make sure that our <code>pom.xml</code> contains the the following elements:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baeldung<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>core-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The most important aspect here is the type – to create an executable jar, double check the configuration uses a <code>jar</code> type.</p>
<p>Now we can start using the various solutions.</p>
<h3 id="Manual-Configuration"><a href="#Manual-Configuration" class="headerlink" title="Manual Configuration"></a>Manual Configuration</h3><p>Let&#39;s start with a manual approach – with the help of the <code>maven-dependency-plugin</code>.</p>
<p>First, we&#39;ll copy all required dependencies into the folder that we&#39;ll specify:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>prepare-package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>copy-dependencies<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">                    $&#123;project.build.directory&#125;/libs</span><br><span class="line">                <span class="tag">&lt;/<span class="name">outputDirectory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>There are two important aspects to notice. First, we specify the goal <code>copy-dependencies</code>, which tells Maven to copy these dependencies into the specified <code>outputDirectory</code>.</p>
<p>In our case, we&#39;ll create a folder named <code>libs</code>, inside the project build directory (which is usually the <code>target</code> folder).</p>
<p>In the second step, we are going to create executable and class path aware jar, with the link to the dependencies copied in the first step:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">addClasspath</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addClasspath</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">classpathPrefix</span>&gt;</span>libs/<span class="tag">&lt;/<span class="name">classpathPrefix</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                    com.baeldung.executable.ExecutableMavenJar</span><br><span class="line">                <span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>The most important part of above-mentioned is the manifest configuration. We add a classpath, with all dependencies (folder <code>libs/</code>), and provide the information about the main class.</p>
<p>Please note, that we need to provide fully qualified named of the class, which means it will include package name.</p>
<p>The advantages and disadvantages of this approach are:</p>
<ul>
<li><strong>pros</strong> – transparent process, where we can specify each step</li>
<li><strong>cons</strong> – manual, dependencies are out of the final jar, which means that your executable jar will only run if the libs folder will be accessible and visible for a jar</li>
</ul>
<h3 id="Apache-Maven-Assembly-Plugin"><a href="#Apache-Maven-Assembly-Plugin" class="headerlink" title="Apache Maven Assembly Plugin"></a>Apache Maven Assembly Plugin</h3><p>The Apache Maven Assembly Plugin allows users to aggregate the project output along with its dependencies, modules, site documentation, and other files into a single, runnable package.</p>
<p>The main goal in the assembly plugin is the <a href="https://maven.apache.org/plugins/maven-assembly-plugin/single-mojo.html">single</a> goal – used to create all assemblies (all other goals are deprecated and will be removed in a future release).</p>
<p>Let&#39;s take a look at the configuration in <code>pom.xml</code>:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                        com.baeldung.executable.ExecutableMavenJar</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Similarly to the manual approach, we need to provide the information about the main class; the difference is that the Maven Assembly Plugin will automatically copy all required dependencies into a jar file.</p>
<p>In the <code>descriptorRefs</code> part of the configuration code, we provided the name, that will be added to the project name.</p>
<p>Output in our example will be named as <code>core-java-jar-with-dependencies.jar</code>.</p>
<ul>
<li><strong>pros</strong> – dependencies inside the jar file, one-file only</li>
<li><strong>cons</strong> – basic control of packaging your artifact, for example, there is no class relocation support</li>
</ul>
<h3 id="Apache-Maven-Shade-Plugin"><a href="#Apache-Maven-Shade-Plugin" class="headerlink" title="Apache Maven Shade Plugin"></a>Apache Maven Shade Plugin</h3><p>Apache Maven Shade Plugin provides the capability to package the artifact in an uber-jar, which consists of all dependencies required to run the project. Moreover, it supports shading – i.e. rename – the packages of some of the dependencies.</p>
<p>Let&#39;s take a look at the configuration:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">shadedArtifactAttached</span>&gt;</span>true<span class="tag">&lt;/<span class="name">shadedArtifactAttached</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">transformers</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">transformer</span> <span class="attr">implementation</span>=</span></span><br><span class="line"><span class="tag">                      &quot;<span class="attr">org.apache.maven.plugins.shade.resource.ManifestResourceTransformer</span>&quot;&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.baeldung.executable.ExecutableMavenJar<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">transformer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">transformers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>There are three main parts of this configuration:</p>
<p>First, <code>&lt;shadedArtifactAttached&gt;</code> marks all dependencies to be packaged into the jar.</p>
<p>Second, we need to specify <a href="https://maven.apache.org/plugins/maven-shade-plugin/usage.html">the transformer implementation</a>; we used the standard one in our example.</p>
<p>Finally, we need to specify the main class of our application.</p>
<p>The output file will be named <code>core-java-0.1.0-SNAPSHOT-shaded.jar</code>, where <code>core-java</code> is our project name, followed by snapshot version and plugin name.</p>
<ul>
<li><strong>pros</strong> – dependencies inside the jar file, advanced control of packaging your artifact, with shading and class relocation</li>
<li><strong>cons</strong> – complex configuration (especially if we want to use advanced features)</li>
</ul>
<h3 id="One-Jar-Maven-Plugin"><a href="#One-Jar-Maven-Plugin" class="headerlink" title="One Jar Maven Plugin"></a>One Jar Maven Plugin</h3><p>Another option to create executable jar is the One Jar project.</p>
<p>This provides custom classloader that knows how to load classes and resources from jars inside an archive, instead of from jars in the filesystem.</p>
<p>Let&#39;s take a look at the configuration:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.jolira<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>onejar-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>org.baeldung.executable.</span><br><span class="line">                  ExecutableMavenJar<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">attachToBuild</span>&gt;</span>true<span class="tag">&lt;/<span class="name">attachToBuild</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filename</span>&gt;</span></span><br><span class="line">                  $&#123;project.build.finalName&#125;.$&#123;project.packaging&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">filename</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>one-jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>As it is shown in the configuration, we need to specify the main class and attach all dependencies to build, by using <code>attachToBuild = true</code>.</p>
<p>Also, we should provide the output filename. Moreover, the goal for Maven is <code>one-jar</code>. Please note, that One Jar is a commercial solution, that will make dependency jars not expanded into the filesystem at runtime.</p>
<ul>
<li><strong>pros</strong> – clean delegation model, allows classes to be at the top-level of the One Jar, supports external jars and can support Native libraries</li>
<li><strong>cons</strong> – not actively supported since 2012</li>
</ul>
<h3 id="Spring-Boot-Maven-Plugin"><a href="#Spring-Boot-Maven-Plugin" class="headerlink" title="Spring Boot Maven Plugin"></a>Spring Boot Maven Plugin</h3><p>Finally, the last solution we&#39;ll look at is the Spring Boot Maven Plugin.</p>
<p>This allows to package executable jar or war archives and run an application &quot;in-place&quot;.</p>
<p>To use it we need to use at least Maven version 3.2. The detailed description is available <a href="https://docs.spring.io/spring-boot/docs/1.4.1.RELEASE/maven-plugin/">here</a>.</p>
<p>Let&#39;s have a look at the config:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">classifier</span>&gt;</span>spring-boot<span class="tag">&lt;/<span class="name">classifier</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                  com.baeldung.executable.ExecutableMavenJar</span><br><span class="line">                <span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>There are two differences between Spring plugin and the others. First, the goal of the execution is called <code>repackage</code>, and the classifier is named <code>spring-boot</code>.</p>
<p>Please note, that we don&#39;t need to have Spring Boot application in order to use this plugin.</p>
<ul>
<li><strong>pros</strong> – dependencies inside a jar file, you can run it in every accessible location, advanced control of packaging your artifact, with excluding dependencies from the jar file etc., packaging of war files as well</li>
<li><strong>cons</strong> – adds potentially unnecessary Spring and Spring Boot related classes</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>In this article, we described many ways of creating an executable jar with various Maven plugins.</p>
<p>The full implementation of this tutorial can be found in <a href="https://github.com/eugenp/tutorials/tree/master/core-java-modules/core-java-jar">this (executable jar)</a> and <a href="https://github.com/eugenp/tutorials/tree/master/spring-thymeleaf-2">this (executable war)</a> Github projects.</p>
<p>How to test? In order to compile the project into an executable jar, please run Maven with mvn clean package command.</p>
<p>Hopefully, this article gives you some more insights on the topic and you will find your preferred approach depending on your needs.</p>
<p>One quick final note – make sure the licenses of the jars you&#39;re bundling don&#39;t prohibit this kind of operation. Generally, that won&#39;t be the case, but it&#39;s something worth considering.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://www.baeldung.com/executable-jar-with-maven">https://www.baeldung.com/executable-jar-with-maven</a></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>让 UWP 应用使用系统全局代理</title>
    <url>/posts/47/</url>
    <content><![CDATA[<p>引用自：<a href="https://github.com/shadowsocks/shadowsocks-windows/issues/1963#issuecomment-413378963">#1963 (comment)</a></p>
<p>以管理员身份启动 PowerShell 后运行下列命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="variable">$f</span> <span class="keyword">in</span> <span class="built_in">Get-ChildItem</span> <span class="variable">$env:LOCALAPPDATA</span>\Packages) &#123;CheckNetIsolation.exe LoopbackExempt <span class="literal">-a</span> <span class="string">&quot;-n=<span class="variable">$</span>(<span class="variable">$f</span>.Name)&quot;</span>&#125;</span><br></pre></td></tr></table></figure>
<p>如果只需要少量应用：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">CheckNetIsolation.exe LoopbackExempt –a –n=&lt;App Directory&gt;</span><br></pre></td></tr></table></figure>
<p>将 <code>&lt;App Directory&gt;</code> 替换成出现在 <code>%LOCALAPPDATA%\Packages</code> 目录中的应用目录名即可。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://github.com/shadowsocks/shadowsocks-windows/issues/897#issuecomment-413400908">https://github.com/shadowsocks/shadowsocks-windows/issues/897#issuecomment-413400908</a></li>
</ul>
]]></content>
      <categories>
        <category>网络服务</category>
      </categories>
  </entry>
  <entry>
    <title>Change a Git Commit Message</title>
    <url>/posts/48/</url>
    <content><![CDATA[<p>When working with Git, you might encounter a situation where you need to edit a commit message. There are many reasons you would want to make the change, such as fixing a typo, removing sensitive information, or adding additional information.</p>
<p>This guide explains how to change the message of the most recent or older Git commits.</p>
<span id="more"></span>
<h2 id="Changing-the-Most-Recent-Commit"><a href="#Changing-the-Most-Recent-Commit" class="headerlink" title="Changing the Most Recent Commit"></a>Changing the Most Recent Commit</h2><p>The <code>git commit --amend</code> command allows you to change the most recent commit message.</p>
<h3 id="Not-pushed-commit"><a href="#Not-pushed-commit" class="headerlink" title="Not pushed commit"></a>Not pushed commit</h3><p>To change the message of the most recent commit that has not been pushed to the remote repository, commit it again using the <code>--amend</code> flag.</p>
<ol>
<li><p><a href="https://linuxize.com/post/linux-cd-command/">Navigate</a> to the repository directory in your terminal.</p>
</li>
<li><p>Run the following command to amend (change) the message of the latest commit:</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit --amend -m &quot;New commit message.&quot;</span><br></pre></td></tr></table></figure>
<p> What the command does is overwriting the most recent commit with the new one.</p>
<p> The <code>-m</code> option allows you to write the new message on the command line without opening an editor session.</p>
</li>
</ol>
<p>Before changing the commit message, you can also add other changes you previously forgot:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit --amend -m &quot;New commit message.&quot;</span><br></pre></td></tr></table></figure>
<h3 id="Pushed-commit"><a href="#Pushed-commit" class="headerlink" title="Pushed commit"></a>Pushed commit</h3><p>The amended (changed) commit is a new entity with a different SHA-1. The previous commit will no longer exist in the current branch.<br>Generally, you should avoid amending a commit that is already pushed as it may cause issues to people who based their work on this commit. It is a good idea to consult your fellow developers before changing a pushed commit.</p>
<p>If you changed the message of most recently pushed commit, you would have to force push it.</p>
<ol>
<li><p>Navigate to the repository.</p>
</li>
<li><p>Amend the message of the latest pushed commit:</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit --amend -m &quot;New commit message.&quot;</span><br></pre></td></tr></table></figure>
<p> Force push to update the history of the remote repository:</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push --force branch-name</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Changing-an-Older-or-Multiple-Commits"><a href="#Changing-an-Older-or-Multiple-Commits" class="headerlink" title="Changing an Older or Multiple Commits"></a>Changing an Older or Multiple Commits</h2><p>If you need to change the message of an older or multiple commits, you can use an interactive <code>git rebase</code> to change one or more older commits.</p>
<p>The <code>rebase</code> command rewrites the commit history, and it is strongly discouraged to rebase commits that are already pushed to the <a href="https://linuxize.com/post/how-to-setup-a-git-server/">remote Git repository</a>.</p>
<ol>
<li><p>Navigate to the repository containing the commit message you want to change.</p>
</li>
<li><p>Type <code>git rebase -i HEAD~N</code>, where <code>N</code> is the number of commits to perform a rebase on. For example, if you want to change the 4th and the 5th latest commits you would type:</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rebase -i HEAD~5</span><br></pre></td></tr></table></figure>
<p> The command will display the latest <code>X</code> commits in your <a href="https://linuxize.com/post/how-to-use-nano-text-editor/">default text editor</a>:</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pick 43f8707f9 fix: update dependency json5 to ^2.1.1</span><br><span class="line">pick cea1fb88a fix: update dependency verdaccio to ^4.3.3</span><br><span class="line">pick aa540c364 fix: update dependency webpack-dev-server to ^3.8.2</span><br><span class="line">pick c5e078656 chore: update dependency flow-bin to ^0.109.0</span><br><span class="line">pick 11ce0ab34 fix: Fix spelling.</span><br><span class="line"></span><br><span class="line"># Rebase 7e59e8ead..11ce0ab34 onto 7e59e8ead (5 commands)</span><br></pre></td></tr></table></figure>
</li>
<li><p>Move to the lines of the commit message you want to change and replace <code>pick</code> with <code>reword</code>:</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reword 43f8707f9 fix: update dependency json5 to ^2.1.1</span><br><span class="line">reword cea1fb88a fix: update dependency verdaccio to ^4.3.3</span><br><span class="line">pick aa540c364 fix: update dependency webpack-dev-server to ^3.8.2</span><br><span class="line">pick c5e078656 chore: update dependency flow-bin to ^0.109.0</span><br><span class="line">pick 11ce0ab34 fix: Fix spelling.</span><br><span class="line"></span><br><span class="line"># Rebase 7e59e8ead..11ce0ab34 onto 7e59e8ead (5 commands)</span><br></pre></td></tr></table></figure>
</li>
<li><p>Save the changes and close the editor.</p>
</li>
<li><p>For each chosen commit, a new text editor window will open. Change the commit message, save the file, and close the editor.</p>
</li>
<li><p>Force push the changes to the remote repository:</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push --force branch-name</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>To change the most recent commit message, use the <code>git commit --amend</code> command. To change an older or multiple commit messages, use <code>git rebase -i HEAD~N</code>.</p>
<p>Don&#39;t amend pushed commits as it may potentially cause a lot of problems to your colleagues.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://linuxize.com/post/change-git-commit-message/">https://linuxize.com/post/change-git-commit-message/</a></li>
</ul>
]]></content>
      <categories>
        <category>版本控制系统</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Clear, Delete or Disable Windows 10 File Explorer Search History</title>
    <url>/posts/53/</url>
    <content><![CDATA[<p>Windows will keep a history of the items you have searched over time. So, each time you type in a search query, you will see a list of recently searched items. You might want to clear this from time to time, especially if you&#39;re on a shared PC or if you just want a fresh start. We already showed you <a href="https://www.groovypost.com/howto/turn-autocomplete-windows-10-file-explorer-on-off/">how to turn off autocomplete in File Explorer</a>. And for even more control over file navigation, here is a look at how to clear recent File Explorer search history or disable it altogether.</p>
<img src="/posts/53/Search-History-Windows-10-File-Explorer.webp" class="">
<span id="more"></span>
<h2 id="Clear-File-Explorer-Search-History"><a href="#Clear-File-Explorer-Search-History" class="headerlink" title="Clear File Explorer Search History"></a>Clear File Explorer Search History</h2><p>You can simply clear your recent search history by selecting the Search tab in File Explorer and going to <em>Recent Searches &gt; Clear search History</em>.</p>
<img src="/posts/53/Clear-Search-history.webp" class="">
<h2 id="Disable-File-Explorer-Search-History"><a href="#Disable-File-Explorer-Search-History" class="headerlink" title="Disable File Explorer Search History"></a>Disable File Explorer Search History</h2><p>If you don&#39;t want to clear your history all the time, you can completely disable it from keeping track of your searches. In Windows 10 Pro, you can turn off search history in Group Policy, but for Windows 10 Home, you need to do a bit of tweaking in the Registry.</p>
<h3 id="In-Windows-10-Pro"><a href="#In-Windows-10-Pro" class="headerlink" title="In Windows 10 Pro"></a>In Windows 10 Pro</h3><p>If you&#39;re running Windows 10 Professional, you can turn it off via Group Policy. Hit the keyboard combo <strong>Windows Key + R</strong> and type <code>gpedit.msc</code> in the Run dialog and hit Enter or click OK.</p>
<img src="/posts/53/1-gpedit.webp" class="">
<p>Then navigate to <code>User Configuration\Administrative Templates\Windows Components\File Explorer</code>. Double-click on &quot;Turn off display of recent search entries in the File Explorer search box&quot; policy in the right pane and set it to Enabled, click OK, and close out of Group Policy Editor.</p>
<img src="/posts/53/2-group-policy-editor-search-box-policy.webp" class="">
<h3 id="In-Windows-10-Home"><a href="#In-Windows-10-Home" class="headerlink" title="In Windows 10 Home"></a>In Windows 10 Home</h3><div class="note info">
            <p>Windows 10 home doesn&#39;t include Group Policy so you need to hack the Registry. Before making any changes to the Registry make sure to do a full system backup or create a Restore Point first.</p>
          </div>
<p>Hit <strong>Windows Key + R</strong> and type <code>regedit</code> in the Run line and hit Enter or click OK.</p>
<img src="/posts/53/2-Regedit.webp" class="">
<p>Then head to <code>HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Explorer</code>. Right-click in the right pane and create a new DWORD (32-bit) Value and name it <code>DisableSearchBoxSuggestions</code> and give it a value of <code>1</code>.</p>
<img src="/posts/53/disable-file-explorer-search-history-collection-Windows-10.webp" class="">
<p>After you&#39;re done, close out of the Registry and you will need to log off or restart your system before you will see the change. You will no longer see the history of past searches in File Explorer. If you want to enable it later, just go back and change the value of <code>DisableSearchBoxSuggestions</code> to <code>0</code>.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://www.groovypost.com/howto/clear-disable-windows-10-file-explorer-search-history/">https://www.groovypost.com/howto/clear-disable-windows-10-file-explorer-search-history/</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
  </entry>
  <entry>
    <title>Colors in JavaScript Console</title>
    <url>/posts/51/</url>
    <content><![CDATA[<p>In Chrome &amp; Firefox (+31) you can add CSS in console.log messages:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%cHello, world!&#x27;</span>, <span class="string">&#x27;background: red; color: green&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>The same can be applied for adding multiple CSS to a command:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%c&lt;str1&gt; %c&lt;str2&gt;&#x27;</span>, <span class="string">&#x27;&lt;css-for-str1&gt;&#x27;</span>, <span class="string">&#x27;&lt;css-for-str2&gt;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>Chrome Console API Reference: <a href="https://developers.google.com/web/tools/chrome-devtools/console/console-write#styling_console_output_with_css">Console API Reference</a>.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/7505623/colors-in-javascript-console">https://stackoverflow.com/questions/7505623/colors-in-javascript-console</a></li>
</ul>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>sleep() in JavaScript</title>
    <url>/posts/50/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Taking a break...&#x27;</span>)</span><br><span class="line">  <span class="keyword">await</span> sleep(<span class="number">2000</span>)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Two seconds later, showing sleep in a loop...&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Sleep in loop</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i === <span class="number">3</span>)</span><br><span class="line">      <span class="keyword">await</span> sleep(<span class="number">2000</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">demo()</span><br></pre></td></tr></table></figure>
<p>This is it. <code>await sleep(&lt;duration&gt;)</code>.</p>
<p>Or as a one-liner:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">await</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">setTimeout</span>(r, <span class="number">2000</span>))</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p><code>await</code> can only be executed in functions prefixed with the <code>async</code> keyword, or at the top level of your script in some environments (e.g. the Chrome DevTools console, or Runkit).</p>
<p><code>await</code> only pauses the current <code>async</code> function</p>
<p>Two new JavaScript features helped write this &quot;sleep&quot; function:</p>
<ul>
<li><a href="https://ponyfoo.com/articles/es6-promises-in-depth">Promises, a native feature of ES2015</a> (aka ES6). We also use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions">arrow functions</a> in the definition of the sleep function.</li>
<li>The <code>async</code>/<code>await</code> feature lets the code explicitly wait for a promise to settle (resolve or reject).</li>
</ul>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep">https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep</a></li>
</ul>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
  </entry>
  <entry>
    <title>修改 Git 默认文本编辑器为 nano</title>
    <url>/posts/49/</url>
    <content><![CDATA[<p>使用命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global core.editor &quot;nano&quot;</span><br></pre></td></tr></table></figure>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://www.oreilly.com/library/view/gitlab-cookbook/9781783986842/apas07.html">https://www.oreilly.com/library/view/gitlab-cookbook/9781783986842/apas07.html</a></li>
</ul>
]]></content>
      <categories>
        <category>版本控制系统</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>在插入网线的同时使用 WiFi 上网</title>
    <url>/posts/52/</url>
    <content><![CDATA[<p>The following is a step by step process as to how you can use wireless internet without taking out your ethernet cable out.</p>
<ol>
<li>Open Network and Sharing Centre (&quot;Network Status&quot; Win10).</li>
<li>Go to &quot;Change Adapter Settings&quot; (&quot;Change adapter options&quot; Win10).</li>
<li>Go to properties of Local Area Network.</li>
<li>Click on Internet Protocol version 4 and go to it&#39;s properties.</li>
<li>Click on Advanced. You will see a block checked there by the name of &quot;Automatic Metric&quot;.</li>
<li>Uncheck it and then enter 2 in that section.</li>
<li>Now, Do the same for the wireless network but enter 1.</li>
</ol>
<p>Save the setting and you&#39;ll be able to use wifi even when your ethernet cable is connected to the LAN.</p>
<p>&quot;Automatic metric&quot; works by prioritizing the connection with the highest link speed. Manaully changing the setting means you can specify which connection you want to give priority to. See <a href="https://support.microsoft.com/en-us/help/299540/an-explanation-of-the-automatic-metric-feature-for-ipv4-routes">&quot;An explanation of the Automatic Metric feature for IPv4 routes&quot;</a>.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://superuser.com/questions/740261/connect-to-internet-with-wifi-while-wired-to-a-different-lan-through-ethernet">https://superuser.com/questions/740261/connect-to-internet-with-wifi-while-wired-to-a-different-lan-through-ethernet</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
  </entry>
  <entry>
    <title>在 CMake 中添加 MPI 支持</title>
    <url>/posts/54/</url>
    <content><![CDATA[<p>CMakeLists.txt 示例</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.17</span>)</span><br><span class="line"><span class="keyword">project</span>(MPITest)</span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>(MPI REQUIRED)</span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;MPI_INCLUDE_PATH&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">20</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_COMPILER mpicxx)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_COMPILER mpicc)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> main.cpp)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>CMake</tag>
        <tag>MPI</tag>
      </tags>
  </entry>
  <entry>
    <title>Automatic Exit From Bash Shell Script on Error</title>
    <url>/posts/57/</url>
    <content><![CDATA[<p>Use the <code>set -e</code> builtin:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="comment"># Any subsequent(*) commands which fail will cause the shell script to exit immediately</span></span><br></pre></td></tr></table></figure>
<p>Alternatively, you can pass <code>-e</code> on the command line:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bash -e my_script.sh</span><br></pre></td></tr></table></figure>
<p>You can also disable this behavior with <code>set +e</code>.</p>
<p>You may also want to employ all or some of the the <code>-e</code> <code>-u</code> <code>-x</code> and <code>-o</code> pipefail options like so:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> -euxo pipefail</span><br></pre></td></tr></table></figure>
<p><code>-e</code> exits on error, <code>-u</code> errors on undefined variables, and <code>-o</code> (for option) pipefail exits on command pipe failures.</p>
<p>*Note:</p>
<p>The shell does <strong>not</strong> exit if the command that fails is part of the command list immediately following a <code>while</code> or <code>until</code> keyword, part of the test following the <code>if</code> or <code>elif</code> reserved words, part of any command executed in a <code>&amp;&amp;</code> or <code>||</code> list except the command following the final <code>&amp;&amp;</code> or <code>||</code>, any command in a pipeline but the last, or if the command&#39;s return value is being inverted with <code>!</code>.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/2870992/automatic-exit-from-bash-shell-script-on-error">https://stackoverflow.com/questions/2870992/automatic-exit-from-bash-shell-script-on-error</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell 脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>GCC -fPIC Option</title>
    <url>/posts/59/</url>
    <content><![CDATA[<p>Position Independent Code means that the generated machine code is not dependent on being located at a specific address in order to work.</p>
<p>E.g., jumps would be generated as relative rather than absolute.</p>
<p>Pseudo-assembly:</p>
<ul>
<li><p>PIC: This would work whether the code was at address 100 or 1000</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100: COMPARE REG1, REG2</span><br><span class="line">101: JUMP_IF_EQUAL CURRENT+10</span><br><span class="line">...</span><br><span class="line">111: NOP</span><br></pre></td></tr></table></figure>
</li>
<li><p>Non-PIC: This will only work if the code is at address 100</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100: COMPARE REG1, REG2</span><br><span class="line">101: JUMP_IF_EQUAL 111</span><br><span class="line">...</span><br><span class="line">111: NOP</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>If your code is compiled with <code>-fPIC</code>, it&#39;s suitable for inclusion in a library. The library must be able to be relocated from its preferred location in memory to another address, there could be another already loaded library at the address your library prefers.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/5311515/gcc-fpic-option">https://stackoverflow.com/questions/5311515/gcc-fpic-option</a></li>
</ul>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
  </entry>
  <entry>
    <title>Set rpath Relative to the Executable</title>
    <url>/posts/58/</url>
    <content><![CDATA[<p>When building a binary or library, specifying the <code>rpath</code>, i.e.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-Wl,-rpath,&lt;path&#x2F;to&#x2F;lib&gt;</span><br></pre></td></tr></table></figure>
<p>tells the linker where to find the required library at runtime.</p>
<p>In the case of <code>rpath</code>, it makes no sense to use a relative path, since a relative path will be relative to the current working directory, <strong>NOT</strong> relative to the directory where the binary/library was found. So it simply won&#39;t work for executables found in <code>$PATH</code> or libraries in pretty much any case.</p>
<p>Instead, you can use the <code>$ORIGIN</code> &quot;special&quot; path to have a path relative to the executable with <code>-Wl,-rpath,&#39;$ORIGIN&#39;</code>. Note that you need quotes around it to avoid having the shell interpret it as a variable, and if you try to do this in a Makefile, you need <code>$$</code> to avoid having make interpret the <code>$</code> as well.</p>
<p>You normally want to pass two arguments to the linker (<code>-rpath</code> and the actual path argument), thus the comma between them. GNU ld will accept it as either two arguments or a single argument with an <code>=</code>, so either can work. Other linkers, e.g., Solaris, only accept it as two arguments.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/38058041/correct-usage-of-rpath-relative-vs-absolute">https://stackoverflow.com/questions/38058041/correct-usage-of-rpath-relative-vs-absolute</a></li>
</ul>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
  </entry>
  <entry>
    <title>Use the Same Buffer for MPI sendbuf and recvbuf</title>
    <url>/posts/55/</url>
    <content><![CDATA[<p>According to <code>MPI_AllReduce</code> man page and MPI doc <code>MPI_IN_PLACE</code> can be used to specify the same buffer for <code>sendbuf</code> and <code>recvbuf</code> as long as you are working inside the same group.</p>
<p>The call would look like:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> rho[<span class="number">1024</span>];</span><br><span class="line"><span class="comment">// Some operation to calculate rho for each process</span></span><br><span class="line"><span class="built_in">MPI_Allreduce</span>(MPI_IN_PLACE, rho, <span class="number">1024</span>, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD);</span><br></pre></td></tr></table></figure>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/16507865/can-mpi-sendbuf-and-recvbuf-be-the-same-thing/16508381">https://stackoverflow.com/questions/16507865/can-mpi-sendbuf-and-recvbuf-be-the-same-thing/16508381</a></li>
</ul>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>MPI</tag>
      </tags>
  </entry>
  <entry>
    <title>mkdir Only if a Directory Does Not Already Exist</title>
    <url>/posts/56/</url>
    <content><![CDATA[<p>Try <code>mkdir -p</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p foo</span><br></pre></td></tr></table></figure>
<p>Note that this will also create any intermediate directories that don&#39;t exist; for instance,</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p foo&#x2F;bar&#x2F;baz</span><br></pre></td></tr></table></figure>
<p>will create directories <code>foo</code>, <code>foo/bar</code>, and <code>foo/bar/baz</code> if they don&#39;t exist.</p>
<p>Some implementation like GNU <code>mkdir</code> include <code>mkdir --parents</code> as a more readable alias, but this is not specified in POSIX/Single Unix Specification and not available on many common platforms like macOS, various BSDs, and various commercial Unixes, so it should be avoided.</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://stackoverflow.com/questions/793858/how-to-mkdir-only-if-a-directory-does-not-already-exist">https://stackoverflow.com/questions/793858/how-to-mkdir-only-if-a-directory-does-not-already-exist</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>shell 脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 强制拉取远程仓库</title>
    <url>/posts/63/</url>
    <content><![CDATA[<p>使用如下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git fetch --all;</span><br><span class="line">git reset --hard origin&#x2F;main;</span><br><span class="line">git pull;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>版本控制系统</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Make MySQL Table Name Case Insensitive</title>
    <url>/posts/64/</url>
    <content><![CDATA[<p>Open terminal and edit <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;mysql&#x2F;mysql.conf.d&#x2F;mysqld.cnf</span><br></pre></td></tr></table></figure>
<p>Underneath the <code>[mysqld]</code> section, add:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lower_case_table_names &#x3D; 1</span><br></pre></td></tr></table></figure>
<p>Restart MySQL:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure>
<p>Then check it here:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqladmin -u root -p variables</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库管理系统</category>
      </categories>
      <tags>
        <tag>MySQL/MariaDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Put a Reference for a Graphic in Beamer</title>
    <url>/posts/62/</url>
    <content><![CDATA[<p>Try to put reference immediately below picture like this:</p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;frame&#125;</span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=<span class="keyword">\linewidth</span>]&#123;example-image&#125;<span class="keyword">\\</span>[-1ex]</span><br><span class="line">    &#123;<span class="keyword">\tiny</span> Source: <span class="keyword">\cite</span>&#123;foo12&#125;&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;frame&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
  </entry>
  <entry>
    <title>Recursively Delete All Files of a Specific Extension in the Current Directory</title>
    <url>/posts/61/</url>
    <content><![CDATA[<p>Use find:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find . -name &quot;*.bak&quot; -type f -delete</span><br></pre></td></tr></table></figure>
<p>But use it with precaution. Run first:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find . -name &quot;*.bak&quot; -type f</span><br></pre></td></tr></table></figure>
<p>to see exactly which files you will remove.</p>
<p>Also, make sure that <code>-delete</code> is the last argument in your command. If you put it before the <code>-name *.bak argument</code>, it will delete <strong>everything</strong>.</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>向每个 screen 中发送 Ctrl-C 信号</title>
    <url>/posts/60/</url>
    <content><![CDATA[<p>使用如下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> scr <span class="keyword">in</span> $(screen -ls | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>); <span class="keyword">do</span> screen -S <span class="variable">$scr</span> -X stuff <span class="string">&quot;^C&quot;</span>; <span class="keyword">done</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Screen</tag>
      </tags>
  </entry>
  <entry>
    <title>Sampling from a Normal Distribution</title>
    <url>/posts/39/</url>
    <content><![CDATA[<p>One of the most common probability distributions is the normal (or Gaussian) distribution.  Many natural phenomena can be modeled using a normal distribution.  It&#39;s also of great importance due to its relation to the <a href="https://en.wikipedia.org/wiki/Central_limit_theorem">Central Limit Theorem</a>.</p>
<p>In this post, we&#39;ll be reviewing the normal distribution and looking at how to draw samples from it using two methods.  The first method using the central limit theorem, and the second method using the <a href="https://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform">Box-Muller transform</a>.  As usual, some brief coverage of the mathematics and code will be included to help drive intuition.</p>
<span id="more"></span>
<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><h3 id="Normal-Distribution"><a href="#Normal-Distribution" class="headerlink" title="Normal Distribution"></a>Normal Distribution</h3><p>Let&#39;s start off first by covering some basics.  A normal distribution (also known as a Gaussian distribution) \(N \sim (\mu, \sigma)\) has probability density function (PDF) and cumulative density function (CDF) shown here parameterized by its mean (\(\mu\)) and standard deviation (\(\sigma\)) <a href="#fn-1"><sup>[1]</sup></a>:</p>
<script type="math/tex; mode=display">f_N(x) = \frac{1}{\sigma \sqrt{2\pi}}e^{-\frac{(x-\mu)^2}{2\sigma^2}} \tag{1}</script><script type="math/tex; mode=display">F_N(x) = \int_{-\infty}^{x}f_N(t) dt  \tag{2}</script><p>The CDF doesn&#39;t have a nice closed form, so we&#39;ll just represent it here using the definition of CDF in terms of its PDF.  We can graph the PDF and CDF (images from <a href="https://en.wikipedia.org/wiki/Normal_distribution">Wikipedia</a>) using various values of the two parameters:</p>
<img src="/posts/39/normal_pdf_cdf.png" class="" title="PDF of Normal Distribution">
<p>The normal distribution is sometimes colloquially known as the &quot;bell curve&quot; because of a it&#39;s symmetric hump.  A very common thing to do with a probability distribution is to <em>sample</em> from it.  In other words, we want to randomly generate numbers (i.e. \(x\) values) such that the values of \(x\) are in proportion to the PDF.  So for the standard normal distribution, \(N \sim (0, 1) \) (the red curve in the picture above), most of the values would fall close to somewhere around \(x=0\).  In fact, 68% will fall within \([-1, 1]\), 95% will fall within \([-2,2]\) and 99.7% will fall within \([-3,3]\).  This corresponds to \(\sigma, 2\sigma, 3\sigma\) from the mean, see this <a href="https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule">article</a> for more details.</p>
<h3 id="Central-Limit-Theorem"><a href="#Central-Limit-Theorem" class="headerlink" title="Central Limit Theorem"></a>Central Limit Theorem</h3><p>The central limit theorem (CLT) is quite a surprising result relating the sample average of \(n\) <a href="https://en.wikipedia.org/wiki/Independent_and_identically_distributed_random_variables">independent and identically distributed</a> (i.i.d.) random variables and a normal distribution.  To state it more precisely: </p>
<blockquote>
<p>Let \({X_1, X_2, \ldots, X_n}\) be \(n\) i.i.d. random variables with \(E(X_i)=\mu\)<br>and \(Var(X_i)=\sigma^2\) and  let \(S_n = \frac{X_1 + X_2 + \ldots + X_n}{n}\) be the sample<br>average. Then \(S_n\) approximates a normal distribution with mean of \(\mu\) and<br>variance of \(\frac{\sigma^2}{n}\) for large \(n\) (i.e. \(S_n \approx N(\mu, \frac{\sigma^2}{n})\)).</p>
</blockquote>
<p>The surprising result is that \(X_n\) can be <em>any</em> distribution.  It isn&#39;t restricted to just normal distributions.  We can also define the standard normal distribution in terms of \(S_n\) by shifting and scaling it:</p>
<script type="math/tex; mode=display">N(0,1) \approx \frac{S_n - \mu}{\frac{\sigma}{\sqrt{n}}} = \frac{\sqrt{n}(S_n - \mu)}{\sigma} \tag{3}</script><h3 id="Comparing-Distributions"><a href="#Comparing-Distributions" class="headerlink" title="Comparing Distributions"></a>Comparing Distributions</h3><p>Since our goal is to implement sampling from a normal distribution, it would be nice to know if we actually did it correctly!  One common way to test if two arbitrary distributions are the same is to use the <a href="https://en.wikipedia.org/wiki/Kolmogorov%E2%80%93Smirnov_test">Kolmogorov–Smirnov test</a>.  In the basic form, we can compare a sample of points with a reference distribution to find their similarity.  </p>
<p>The basic idea of the test is to first sort the points in the sample and the compute the <a href="https://en.wikipedia.org/wiki/Empirical_distribution_function">empirical CDF</a>. Next, find the largest absolute difference between any point in the empirical CDF and the theoretical reference distribution.  If the two are the same, this difference should be very small. If it&#39;s large then we can be confident that the distribution is different.  Further, this difference follows a certain distribution, which allows us to test our null hypothesis of whether our samples were drawn from the reference distribution.<br>The following figure (from <a href="https://en.wikipedia.org/wiki/Kolmogorov%E2%80%93Smirnov_test#Kolmogorov_distribution">Wikipedia</a>) shows this more clearly:</p>
<img src="/posts/39/ks_test.png" class="" title="Kolmogorov–Smirnov test">
<p>Fortunately, we don&#39;t have to implement this ourselves.  A package is available in <a href="http://docs.scipy.org/doc/scipy/reference/tutorial/stats.html">scipy.stats</a>.  Let&#39;s play around with it a bit to see how it works.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> stats</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">np.random.seed(<span class="number">123</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># number of samples</span></span><br><span class="line">N=<span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Run Kolmogorov-Smirnov test Uniform(0,1) vs. reference N(0, 1)</span></span><br><span class="line">samples = stats.uniform.rvs(loc=<span class="number">0</span>, scale=<span class="number">1</span>, size=N)</span><br><span class="line">test_stat, pvalue = stats.kstest(samples, <span class="string">&#x27;norm&#x27;</span>, args=(<span class="number">0</span>, <span class="number">1</span>), N=N)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;U(0,1) vs. N(0, 1): KS=%.4f with p-value = %.4f.&quot;</span> % (test_stat, pvalue))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Run Kolmogorov-Smirnov test N(0, 2) vs. reference N(0, 1)</span></span><br><span class="line">samples = stats.norm.rvs(loc=<span class="number">0</span>, scale=<span class="number">2</span>, size=N) </span><br><span class="line">test_stat, pvalue = stats.kstest(samples, <span class="string">&#x27;norm&#x27;</span>, args=(<span class="number">0</span>, <span class="number">1</span>), N=N)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;N(0,2) vs. N(0, 1): KS=%.4f with p-value = %.4f.&quot;</span> % (test_stat, pvalue))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Run Kolmogorov-Smirnov test N(0, 1) vs. reference N(0, 1)</span></span><br><span class="line">samples = stats.norm.rvs(loc=<span class="number">0</span>, scale=<span class="number">1</span>, size=N) </span><br><span class="line">test_stat, pvalue = stats.kstest(samples, <span class="string">&#x27;norm&#x27;</span>, args=(<span class="number">0</span>, <span class="number">1</span>), N=N)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;N(0,1) vs. N(0, 1): KS=%.4f with p-value = %.4f.&quot;</span> % (test_stat, pvalue))</span><br></pre></td></tr></table></figure>
<pre><code>U(0,1) vs. N(0, 1): KS=0.5000 with p-value = 0.0000.
N(0,2) vs. N(0, 1): KS=0.1673 with p-value = 0.0000.
N(0,1) vs. N(0, 1): KS=0.0104 with p-value = 0.2288.
</code></pre><p>Using \(N(0,1)\) as our reference distribution, the KS test has a large value and a negligible p-value when comparing to a uniform distribution \(U(0,1)\) (\(KS=0.5\)).  The normal distribution with a wider base \(N(0, 2)\) (\(KS=0.1673\)) also has a negligible p-value.  However, when we compare samples from the identical distribution \(N(0,1)\), we get a relatively small value (\(KS=0.0104\)) for the test statistic and a large p-value, indicating we don&#39;t have sufficient evidence to reject the null hypothesis (that our two distributions are the same).</p>
<h2 id="Sampling-using-the-Central-Limit-Theorem"><a href="#Sampling-using-the-Central-Limit-Theorem" class="headerlink" title="Sampling using the Central Limit Theorem"></a>Sampling using the Central Limit Theorem</h2><p>Now let&#39;s try to use the Central Limit Theorem to sample from \(N(0,1)\).  First let&#39;s define our i.i.d. variable \(X_n\) to have a <a href="https://en.wikipedia.org/wiki/Bernoulli_distribution">Bernoulli distribution</a> with \(p=0.5\), which we can intuitively think of tossing an unbiased coin:</p>
<script type="math/tex; mode=display">P(X_n=k) = \begin{cases} p=0.5 & \text{if }k=1, \\[6pt] 1-p = 0.5 & \text {if }k=0.\end{cases} \tag{4}</script><p>Recall, the Bernoulli distribution is closely relates to the <a href="https://en.wikipedia.org/wiki/Binomial_distribution">Binomial distribution</a> denoted by \(B(n, p)\) by \(Bernoulli(p) = B(n=1, p)\) .  The Binomial distribution can intuitively be thought of as counting the number of heads in \(n\) tosses of a coin (i.e. Bernoulli trials).  If \(n=1\), it reduces to a Bernoulli distribution (or single coin toss).</p>
<p>Let&#39;s now define our sample average for \(n\) tosses of our unbiased coin:</p>
<script type="math/tex; mode=display">S_n = \frac{X_1 + X_2 + \ldots + X_n}{n} = \frac{B(n, p=0.5)}{n}</script><p>We can see that this distribution has \(\mu=\frac{n}{2}\) (we expect half our tosses to be heads), and \(\sigma^2=\frac{p(1-p)}{n}=\frac{0.25}{n}\) (Bernoulli RVs have \(\sigma^2 = p(1-p)\)).</p>
<p>Shifting and scaling<a href="#fn-2"><sup>[2]</sup></a> this to get our standard normal distribution using Equation 3, we get:</p>
<script type="math/tex; mode=display">\begin{equation}
\begin{aligned} 
N(0,1) &\approx \frac{\sqrt{n}(S_n - \mu)}{\sigma} \\
       &= \frac{\sqrt{n}(\frac{X_1 + X_2 + \ldots + X_n}{n} - 0.5)}{\sqrt{0.25}} \\
       &= 2\sqrt{n}(\frac{X_1 + X_2 + \ldots + X_n}{n} - 0.5)
\end{aligned} \tag{5}
\end{equation}</script><p>Theoretically, this should give us an equation to roughly simulate a standard normal distribution.  Let&#39;s try it!</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">N=<span class="number">10000</span></span><br><span class="line">random.seed(<span class="number">123</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bernoulli</span>():</span></span><br><span class="line">    <span class="keyword">return</span> random.randint(<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Our sample function of N(0,1) using Equation 5</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sampleN_v1</span>(<span class="params">N=<span class="number">2500</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2.0</span> * math.sqrt(N) * (<span class="built_in">sum</span>(bernoulli() <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(N)) / N - <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use KS to test again</span></span><br><span class="line">samples = [sampleN_v1() <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(N)]</span><br><span class="line">test_stat, pvalue = stats.kstest(samples, <span class="string">&#x27;norm&#x27;</span>, args=(<span class="number">0</span>, <span class="number">1</span>), N=N)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;sample_N(0,1) vs. N(0, 1): KS=%.4f with p-value = %.4f.&quot;</span> % (test_stat, pvalue))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Let&#x27;s plot our samples against our reference distribution</span></span><br><span class="line">reference = [stats.norm.rvs() <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(N)]</span><br><span class="line">pd.DataFrame(&#123;<span class="string">&#x27;sample_N&#x27;</span>: samples, <span class="string">&#x27;N(0,1)&#x27;</span>: reference&#125;).plot(kind=<span class="string">&#x27;hist&#x27;</span>, bins=<span class="number">100</span>, alpha=<span class="number">0.4</span>)</span><br></pre></td></tr></table></figure>
<pre><code>sample_N(0,1) vs. N(0, 1): KS=0.0114 with p-value = 0.1499.
&lt;matplotlib.axes._subplots.AxesSubplot at 0x7f62c4dd4e80&gt;
</code></pre><img src="/posts/39/index_4_2.png" class="">
<p>Our KS score is somewhat close to \(0\) with a p-value that suggests we can&#39;t reject our null hypothesis.  Graphing our implementation of \(N(0,1)\) with the reference one shows that we have the roughly the right shape.  No doubt by setting larger \(N\) (for both the number of Bernoulli trials and the number of samples drawn), we would get something much closer.  </p>
<p>One large downside of our CLT implementation is that it&#39;s <em>slow</em>.  While the wall clock time of drawing \(10000\) samples using the <code>numpy</code> library is unnoticeable, it takes roughly ten seconds on my machine with the parameters above using our CLT implementation, quite a big difference.  In the next section, we&#39;ll see a much more efficient implementation that uses a &quot;trick&quot; to transform a pair of independent uniform random variables to a pair of independent normal random variables.</p>
<h2 id="Sampling-using-the-Box-Muller-Transform"><a href="#Sampling-using-the-Box-Muller-Transform" class="headerlink" title="Sampling using the Box-Muller Transform"></a>Sampling using the Box-Muller Transform</h2><p>The <a href="https://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform">Box-Muller transform</a> is a neat little &quot;trick&quot; that allows us to sample from a pair of normally distributed variables using a source of only uniformly distributed variables.  The transform is actually pretty simple to compute.  Given two independent uniformly distributed random variables \(U_1, U_2\) on the interval \((0,1)\), we define two new random variables, \(R\) and \(\Theta\), that intuitively representing <a href="https://en.wikipedia.org/wiki/Polar_coordinate_system">polar coordinates</a> as such:</p>
<script type="math/tex; mode=display">\begin{align}
R    &= \sqrt{-2lnU_1}   \tag{6}\\
\Theta &= 2\pi U_2  \tag{7}
\end{align}</script><p>Now using the standard transformation from polar coordinates \(R, \Theta\) to Cartesian ones \(X, Y\), we claim that \(X\) and \(Y\) are independent standard normally distributed random variables:</p>
<script type="math/tex; mode=display">\begin{align}
X &= Rcos\Theta &= \sqrt{-2lnU_1}cos(2\pi U_2) \tag{8}\\
Y &= Rsin\Theta &= \sqrt{-2lnU_1}sin(2\pi U_2) \tag{9}
\end{align}</script><p>Let&#39;s take a look at the proof to gain some intuition on how this works.</p>
<h3 id="Proof"><a href="#Proof" class="headerlink" title="Proof"></a>Proof</h3><p>Starting with \(U_1, U_2\), let&#39;s see what kind of distributions we have for \(R, \Theta\).  From Equation 7, it should be clear that \(\Theta\) is also uniformly distributed since it&#39;s just multiplying by a constant (\(2\pi\)), but let&#39;s go through the motions to explicitly see that.  From the CDF of \(\Theta\):</p>
<script type="math/tex; mode=display">\begin{equation}
\begin{aligned} 
P(\Theta \leq \theta) &= P(2\pi U_2 \leq \theta) \\
                      &= P(U_2 \leq \frac{\theta}{2\pi}) \\
               \Theta &\sim Uniform(0, 2\pi)
\end{aligned} \tag{10}
\end{equation}</script><p>So we have our first result that \(\Theta\) is uniformly distributed on \((0, 2\pi)\) (as we would expect).  Using a more explicit method, we can find the distribution of \(R\).  From Equation 7, we know that the mapping from \(U_1\) to \(R\) is one-to-one, which we&#39;ll call \(g\) (i.e. \(R=g(U_1)\)).  So if we&#39;re trying to find the probability of R over \((r_1, r_2)\) (by integrating its PDF), there is some equivalent range over \((g^{-1}(r_1), g^{-1}(r_2))\) where we can integrate over the PDF of \(U_1\).  Let&#39;s see how this works <a href="#fn-3"><sup>[3]</sup></a>:</p>
<script type="math/tex; mode=display">\begin{equation}
\begin{aligned} 
P(r_1 \leq R \leq r_2) &=  \int_{g^{-1}(r_2)}^{g^{-1}(r_1)} f_{U_1}(s) ds  && \text{since } g(x) \text{ is strictly decreasing}\\
                       &=  -\int_{g^{-1}(r_1)}^{g^{-1}(r_2)}  ds && \text{since }f_{U_1}(u)=1 \\
                       &=  -\int_{r_1}^{r_2} -t e^{\frac{-t^2}{2}} dt && \text{change variables } t=\sqrt{-2\ln s} \\

\end{aligned} \tag{11}
\end{equation}</script><script type="math/tex; mode=display">\begin{equation}
f_R(r) =  r e^{\frac{-r^2}{2}}  \tag{12}
\end{equation}</script><p>giving us the PDF for \(R\), \(f_R(r)\)<a href="#fn-4"><sup>[4]</sup></a>.  It should also be clear that \(R\) and \(\Theta\) are independent because \(U_1\) and \(U_2\) are independent.</p>
<p>Now that we have the distributions for both \(R\) and \(\Theta\), let&#39;s label Equation 8 and 9 as \(X=g_x(R, \Theta)\) and \(Y=g_y(R, \Theta)\), respectively.  Now we can apply the same procedure as above using variable substitution (for multiple variables) to derive the joint distribution of \(X\) and \(Y\) (we&#39;ll represent the<br>area in the transformed space by \(A\)<a href="#fn-5"><sup>[5]</sup></a>):</p>
<script type="math/tex; mode=display">\begin{equation}
\begin{aligned} 
P(x_1 &\leq X \leq x_2, y_1 \leq Y \leq y_2) \\
    &= \int \int_A f_{R,\Theta}(u, v) du dv \\
    &= \int \int_A f_{R}(u)f_{\Theta}(v) du dv && \text{since } R \text{ and } \Theta \text{ are independent} \\ 
    &= \int \int_A ue^{\frac{-u^2}{2}}\frac{1}{2\pi} du dv
\end{aligned} \tag{13}
\end{equation}</script><p>At this point, we should remember that if \(p=ucos(v), q=usin(v)\), then solving for \(u,v\) results in \(u=\sqrt{q^2+p^2}, v=arctan(\frac{q}{p})\).  Also, <a href="https://en.wikipedia.org/wiki/Integration_by_substitution#Substitution_for_multiple_variables">substitution for multiple variables</a> means that \(du dv = |det(\frac{\partial(u,v)}{\partial(p, q)})| dp dq\), plugging our expressions for \(u\) and \(v\) in:</p>
<script type="math/tex; mode=display">\begin{equation}
\begin{aligned} 
du dv &= |det(\frac{\partial(u,v)}{\partial(p, q)})| dp dq \\
      &= 
\left |
\begin{array}{cc}
\frac{\partial u}{\partial p} & \frac{\partial u}{\partial q} \\
\frac{\partial v}{\partial p} & \frac{\partial v}{\partial q}
\end{array}
\right | dpdq \\
      &= 
\left |
\begin{array}{cc}
\frac{\partial \sqrt{q^2+p^2}}{\partial p} & \frac{\partial \sqrt{q^2+p^2}}{\partial q} \\
\frac{\partial arctan(\frac{q}{p})}{\partial p} & \frac{\partial arctan(\frac{q}{p})}{\partial q}
\end{array}
\right | dpdq \\
      &= 
\left |
\begin{array}{cc}
\frac{p}{\sqrt{p^2+q^2}} & \frac{q}{\sqrt{p^2+q^2}} \\
\frac{-q}{p^2(1+(\frac{q}{p})^2)} & \frac{1}{p(1+(\frac{q}{p})^2)}
\end{array}
\right | dpdq \\
      &= \frac{1}{\sqrt{p^2 + q^2}} dpdq
\end{aligned} \tag{14}
\end{equation}</script><p>Using the result from Equation 14 into Equation 13, we get:</p>
<script type="math/tex; mode=display">\begin{equation}
\begin{aligned}
P(&x_1 \leq X \leq x_2, y_1 \leq Y \leq y_2) && \text{change variables} \\
    &= \int_{x_1}^{x_2} \int_{y_1}^{y_2} \frac{\sqrt{p^2 + q^2}}{2\pi}\cdot e^{\frac{-(p^2 + q^2)}{2}} \cdot \frac{1}{\sqrt{p^2 + q^2}} dp dq  && p=ucos(v)  \\
    &                     && q=usin(v) \\
    &= \int_{x_1}^{x_2} \underbrace{\frac{1}{\sqrt{2\pi}} e^{\frac{-p^2}{2}}}_{f_X(x)} dp \int_{y_1}^{y_2} \underbrace{\frac{1}{\sqrt{2\pi}} e^{\frac{-q^2}{2}}}_{f_Y(y)} dq
\end{aligned} \tag{15}
\end{equation}</script><p>Equation 15 shows that \(X\) and \(Y\) are independent each with PDF matching our standard normal distribution \(N(0,1)\) as required.</p>
<h3 id="Implementing-Box-Muller-Transform"><a href="#Implementing-Box-Muller-Transform" class="headerlink" title="Implementing Box-Muller Transform"></a>Implementing Box-Muller Transform</h3><p>The implementation is a relatively straight forward application of Equation 8 and 9:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">N=<span class="number">10000</span></span><br><span class="line">random.seed(<span class="number">123</span>)</span><br><span class="line">epsilon = sys.float_info.epsilon</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">box_muller</span>():</span></span><br><span class="line">    <span class="comment"># Avoid getting u == 0.0</span></span><br><span class="line">    u1, u2 = <span class="number">0.0</span>, <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">while</span> u1 &lt; epsilon <span class="keyword">or</span> u2 &lt; epsilon:</span><br><span class="line">        u1 = random.random()</span><br><span class="line">        u2 = random.random()</span><br><span class="line">        </span><br><span class="line">    n1 = math.sqrt(-<span class="number">2</span> * math.log(u1)) * math.cos(<span class="number">2</span> * math.pi * u2)</span><br><span class="line">    n2 = math.sqrt(-<span class="number">2</span> * math.log(u1)) * math.sin(<span class="number">2</span> * math.pi * u2)</span><br><span class="line">    <span class="keyword">return</span> n1, n2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use KS to test</span></span><br><span class="line">samples = [box_muller()[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(N)]</span><br><span class="line">test_stat, pvalue = stats.kstest(samples, <span class="string">&#x27;norm&#x27;</span>, args=(<span class="number">0</span>, <span class="number">1</span>), N=N)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;sample_N(0,1) vs. N(0, 1): KS=%.4f with p-value = %.4f.&quot;</span> % (test_stat, pvalue))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot our samples against our reference distribution</span></span><br><span class="line">reference = [stats.norm.rvs() <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(N)]</span><br><span class="line">pd.DataFrame(&#123;<span class="string">&#x27;sample_N&#x27;</span>: samples, <span class="string">&#x27;N(0,1)&#x27;</span>: reference&#125;).plot(kind=<span class="string">&#x27;hist&#x27;</span>, bins=<span class="number">100</span>, alpha=<span class="number">0.4</span>)</span><br></pre></td></tr></table></figure>
<pre><code>sample_N(0,1) vs. N(0, 1): KS=0.0074 with p-value = 0.6372.

&lt;matplotlib.axes._subplots.AxesSubplot at 0x7f62c509fcc0&gt;
</code></pre><img src="/posts/39/index_7_2.png" class="">
<p>As we can see, our Box-Muller method of sampling from \( N(0,1) \) generates quite good results.  Our KS test statistic is quite small along with a large p-value (so we can&#39;t reject our null hypothesis).  Similarly, the graph shows the expected shape matching our reference distribution.  The one big advantage this method has though is that it&#39;s quite fast.  There&#39;s no noticeable lag when generating (N=10000) samples.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Generating pseudo-random numbers according to various probability distributions has many applications, for example, in Markov Chain Monte Carlo (MCMC) techniques.  In this post, we looked at one of the most fundamental distributions: the standard normal distribution.  Our first method uses a result directly from the central limit theorem which results in an inefficient implementation.  However with a bit of grit and calculus, we were able to show that the Box-Muller transform provides a much more elegant solution to sampling from a standard normal distribution leading us to an efficient implementation.  Hopefully this sheds some light on how to sample a normal distribution.</p>
<h2 id="References-and-Further-Reading"><a href="#References-and-Further-Reading" class="headerlink" title="References and Further Reading"></a>References and Further Reading</h2><ul>
<li>Wikipedia: <a href="https://en.wikipedia.org/wiki/Normal_distribution">Normal Distribution</a>, <a href="https://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform">Box-Muller Transform</a>, <a href="https://en.wikipedia.org/wiki/Central_limit_theorem">Central Limit Theorem</a>, <a href="https://en.wikipedia.org/wiki/Integration_by_substitution#Substitution_for_multiple_variables">Substitution for multiple variables</a>, <a href="https://en.wikipedia.org/wiki/Determinant#2.C2.A0.C3.97.C2.A02_matrices">Determinant of 2x2 matrices</a>, <a href="https://en.wikipedia.org/wiki/Jacobian_matrix_and_determinant">Jacobian matrix and determinant</a></li>
<li>Stack Exchange: <a href="http://stats.stackexchange.com/questions/16334/how-to-sample-from-a-normal-distribution-with-known-mean-and-variance-using-a-co">How to sample from a normal distribution with known mean and variance using a conventional programming language?</a>, <a href="http://math.stackexchange.com/questions/1110168/proof-of-the-box-muller-method">Proof of Box-Muller method</a></li>
<li><a href="http://www.math.uah.edu/stat/dist/Transformations.html">Transformations of Random Variables</a> (University of Alabama Huntsville)</li>
<li><a href="http://tutorial.math.lamar.edu/Classes/CalcIII/ChangeOfVariables.aspx">Change of Variables</a> (Paul&#39;s Online Math Notes)</li>
<li><a href="http://www.math.nyu.edu/faculty/goodman/teaching/MonteCarlo2005/notes/GaussianSampling.pdf">Simple Sampling of Gaussians</a> (Jonathan Goodman, NYU)</li>
</ul>
<h2 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h2><p>List of Notes: <sup><a href="#fn_1" id="reffn_1">1</a></sup>, <sup><a href="#fn_2" id="reffn_2">2</a></sup>, <sup><a href="#fn_3" id="reffn_3">3</a></sup>, <sup><a href="#fn_4" id="reffn_4">4</a></sup>, <sup><a href="#fn_5" id="reffn_5">5</a></sup></p>
<blockquote id="fn_1">
<sup>1</sup>. We&#39;ll use the convention of \(f_X(x)\) and \(F_X(x)\) to denote the PDF and CDF of random variable X, respectively.<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_2">
<sup>2</sup>. If we got back to the definitions of mean and variance, we can see this shifting and scaling yields the correct result.  \(E(\frac{\sqrt{n}(S_n - \mu)}{\sigma}) = \frac{\sqrt{n}(E(S_n) - \mu)}{\sigma} = 0\) since \(E(S_n)=\mu\) by definition.  And \(Var(\frac{\sqrt{n}(S_n - \mu)}{\sigma}) = \frac{n}{\sigma^2}(E((S_n - \mu)^2) - (E(S_n - \mu))^2 = \frac{n}{\sigma^2} \frac{\sigma^2}{n} = 1 \)<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_3">
<sup>3</sup>. We use \(s, t\) for the dummy variables of \(U_1, R\) respectively.  You might also need a refresher on <a href="https://en.wikipedia.org/wiki/Integration_by_substitution">integration by substitution</a> like I did.  Also notice that we flipped the integral endpoints of \(g^{-1}(r1)\) and \(g^{-1}(r2)\) because \(g(x)\) is a strictly decreasing function, so the lower limit \(r_1\) maps to the upper limit \(g^{-1}(r_1)\) in the transformed function.  Similarly with \(r_2\) and \(g^{-1}(r_2)\).<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_4">
<sup>4</sup>. Our result is actually a specific case of a more general result when transforming from one probability distribution.  Take a look at <a href="http://www.math.uah.edu/stat/dist/Transformations.html">Transformations of Random Variables</a> for more details and examples.<a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a>
</blockquote>
<blockquote id="fn_5">
<sup>5</sup>. Remember that the rectangular area represented by \((x_1, x_2)\) and \((y_1, y_2)\) is non-rectagular when we transform it into the \(R\) and \(\Theta\) space.  This means that we&#39;re no longer integrating just along \(R\) and \(\Theta\) separately but together along the new oddly shaped area, thus the need to use \(A\) to represent the area.<a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a>
</blockquote>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="http://bjlkeng.github.io/posts/sampling-from-a-normal-distribution/">http://bjlkeng.github.io/posts/sampling-from-a-normal-distribution/</a></li>
</ul>
]]></content>
      <categories>
        <category>数学知识</category>
      </categories>
      <tags>
        <tag>概率论与数理统计</tag>
      </tags>
  </entry>
</search>
